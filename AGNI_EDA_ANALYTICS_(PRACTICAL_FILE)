{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ttcchub/AGNI_EDA_ANALYTICS_-PRACTICAL_FILE-/blob/main/AGNI_EDA_ANALYTICS_(PRACTICAL_FILE)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*italicised text*## AGNI EDA ANALYTICS"
      ],
      "metadata": {
        "id": "kbKCwB_Yi_kY"
      },
      "id": "kbKCwB_Yi_kY"
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. Анализ данных\n",
        "2. Система рекомендаций, основанная на похожести клиентов (Collaborative filtering)\n",
        "\n",
        "// Generate and transform CSV https://www.convertcsv.com/generate-test-data.htm"
      ],
      "metadata": {
        "id": "pMr5Etd09Lh1"
      },
      "id": "pMr5Etd09Lh1"
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "kUC3843iaHS0"
      },
      "id": "kUC3843iaHS0"
    },
    {
      "cell_type": "markdown",
      "source": [
        "<img src='https://www.agni.gallery/cdn/shop/files/Asset_1_5a260f9a-9975-4d8d-93e1-4dffee0420cc.svg?v=1715077721&width=168' width=500>"
      ],
      "metadata": {
        "id": "cmh6GHTHpc_q"
      },
      "id": "cmh6GHTHpc_q"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "bde2eb69",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:28:19.681294Z",
          "iopub.status.busy": "2022-02-27T12:28:19.680113Z",
          "iopub.status.idle": "2022-02-27T12:28:20.689673Z",
          "shell.execute_reply": "2022-02-27T12:28:20.688552Z",
          "shell.execute_reply.started": "2022-02-14T13:43:10.023295Z"
        },
        "papermill": {
          "duration": 1.063339,
          "end_time": "2022-02-27T12:28:20.689972",
          "exception": false,
          "start_time": "2022-02-27T12:28:19.626633",
          "status": "completed"
        },
        "tags": [],
        "id": "bde2eb69"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "from matplotlib import pyplot as plt\n",
        "from tqdm import tqdm"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.kaggle.com/competitions/h-and-m-personalized-fashion-recommendations"
      ],
      "metadata": {
        "id": "_0jhmkW6fEWe"
      },
      "id": "_0jhmkW6fEWe"
    },
    {
      "cell_type": "code",
      "source": [
        "!wget 'https://drive.google.com/uc?id=1R_v1aeFQGConcEwoVCWk79iJeZ6-xyKI' -O articles.csv"
      ],
      "metadata": {
        "id": "HCdzC91Qe0a9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fe2466e1-b8a2-4080-a8a3-985658cdeabc"
      },
      "id": "HCdzC91Qe0a9",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2024-05-22 08:05:47--  https://drive.google.com/uc?id=1R_v1aeFQGConcEwoVCWk79iJeZ6-xyKI\n",
            "Resolving drive.google.com (drive.google.com)... 173.194.202.100, 173.194.202.139, 173.194.202.113, ...\n",
            "Connecting to drive.google.com (drive.google.com)|173.194.202.100|:443... connected.\n",
            "HTTP request sent, awaiting response... 303 See Other\n",
            "Location: https://drive.usercontent.google.com/download?id=1R_v1aeFQGConcEwoVCWk79iJeZ6-xyKI [following]\n",
            "--2024-05-22 08:05:47--  https://drive.usercontent.google.com/download?id=1R_v1aeFQGConcEwoVCWk79iJeZ6-xyKI\n",
            "Resolving drive.usercontent.google.com (drive.usercontent.google.com)... 74.125.197.132, 2607:f8b0:400e:c00::84\n",
            "Connecting to drive.usercontent.google.com (drive.usercontent.google.com)|74.125.197.132|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 28427845 (27M) [application/octet-stream]\n",
            "Saving to: ‘articles.csv’\n",
            "\n",
            "articles.csv        100%[===================>]  27.11M  42.2MB/s    in 0.6s    \n",
            "\n",
            "2024-05-22 08:05:51 (42.2 MB/s) - ‘articles.csv’ saved [28427845/28427845]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!wget --load-cookies /tmp/cookies.txt \"https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://drive.google.com/file/d/1wK-n8XBUc1-M-tAiJdkkSQcL2ajf5Lbm' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\\1\\n/p')&id=1wK-n8XBUc1-M-tAiJdkkSQcL2ajf5Lbm\" -O customers.csv && rm -rf /tmp/cookies.txt"
      ],
      "metadata": {
        "id": "IgJLVQtGkfZY",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1a427f41-1817-4e44-eef5-9e77e5c8b556"
      },
      "id": "IgJLVQtGkfZY",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2024-05-22 08:05:53--  https://docs.google.com/uc?export=download&confirm=&id=1wK-n8XBUc1-M-tAiJdkkSQcL2ajf5Lbm\n",
            "Resolving docs.google.com (docs.google.com)... 74.125.20.139, 74.125.20.102, 74.125.20.101, ...\n",
            "Connecting to docs.google.com (docs.google.com)|74.125.20.139|:443... connected.\n",
            "HTTP request sent, awaiting response... 303 See Other\n",
            "Location: https://drive.usercontent.google.com/download?id=1wK-n8XBUc1-M-tAiJdkkSQcL2ajf5Lbm&export=download [following]\n",
            "--2024-05-22 08:05:53--  https://drive.usercontent.google.com/download?id=1wK-n8XBUc1-M-tAiJdkkSQcL2ajf5Lbm&export=download\n",
            "Resolving drive.usercontent.google.com (drive.usercontent.google.com)... 74.125.197.132, 2607:f8b0:400e:c00::84\n",
            "Connecting to drive.usercontent.google.com (drive.usercontent.google.com)|74.125.197.132|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 2427 (2.4K) [text/html]\n",
            "Saving to: ‘customers.csv’\n",
            "\n",
            "customers.csv       100%[===================>]   2.37K  --.-KB/s    in 0s      \n",
            "\n",
            "2024-05-22 08:05:54 (31.4 MB/s) - ‘customers.csv’ saved [2427/2427]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!wget --load-cookies /tmp/cookies.txt \"https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://drive.google.com/file/d/1jz2hHg7iwxSAnAisnlQyiPwV2a8ZG_sB' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\\1\\n/p')&id=1jz2hHg7iwxSAnAisnlQyiPwV2a8ZG_sB\" -O transactions.csv && rm -rf /tmp/cookies.txt"
      ],
      "metadata": {
        "id": "iLl_rvpskp93",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4265a332-a904-42d9-f606-f1c5afa04c79"
      },
      "id": "iLl_rvpskp93",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2024-05-22 08:05:57--  https://docs.google.com/uc?export=download&confirm=&id=1jz2hHg7iwxSAnAisnlQyiPwV2a8ZG_sB\n",
            "Resolving docs.google.com (docs.google.com)... 74.125.20.139, 74.125.20.102, 74.125.20.101, ...\n",
            "Connecting to docs.google.com (docs.google.com)|74.125.20.139|:443... connected.\n",
            "HTTP request sent, awaiting response... 303 See Other\n",
            "Location: https://drive.usercontent.google.com/download?id=1jz2hHg7iwxSAnAisnlQyiPwV2a8ZG_sB&export=download [following]\n",
            "--2024-05-22 08:05:57--  https://drive.usercontent.google.com/download?id=1jz2hHg7iwxSAnAisnlQyiPwV2a8ZG_sB&export=download\n",
            "Resolving drive.usercontent.google.com (drive.usercontent.google.com)... 74.125.197.132, 2607:f8b0:400e:c00::84\n",
            "Connecting to drive.usercontent.google.com (drive.usercontent.google.com)|74.125.197.132|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 2434 (2.4K) [text/html]\n",
            "Saving to: ‘transactions.csv’\n",
            "\n",
            "\rtransactions.csv      0%[                    ]       0  --.-KB/s               \rtransactions.csv    100%[===================>]   2.38K  --.-KB/s    in 0s      \n",
            "\n",
            "2024-05-22 08:05:58 (26.4 MB/s) - ‘transactions.csv’ saved [2434/2434]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "25ae9f5d",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:28:20.833702Z",
          "iopub.status.busy": "2022-02-27T12:28:20.832872Z",
          "iopub.status.idle": "2022-02-27T12:29:40.468765Z",
          "shell.execute_reply": "2022-02-27T12:29:40.467869Z",
          "shell.execute_reply.started": "2022-02-14T13:43:11.098198Z"
        },
        "papermill": {
          "duration": 79.706724,
          "end_time": "2022-02-27T12:29:40.468959",
          "exception": false,
          "start_time": "2022-02-27T12:28:20.762235",
          "status": "completed"
        },
        "tags": [],
        "id": "25ae9f5d"
      },
      "outputs": [],
      "source": [
        "articles = pd.read_csv(\"articles.csv\")\n",
        "customers = pd.read_csv(\"customers.csv\")\n",
        "transactions = pd.read_csv(\"transactions.csv\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "27607d49",
      "metadata": {
        "papermill": {
          "duration": 0.048997,
          "end_time": "2022-02-27T12:29:40.666981",
          "exception": false,
          "start_time": "2022-02-27T12:29:40.617984",
          "status": "completed"
        },
        "tags": [],
        "id": "27607d49"
      },
      "source": [
        "## Articles"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "0402f58c",
      "metadata": {
        "papermill": {
          "duration": 0.051479,
          "end_time": "2022-02-27T12:29:40.866447",
          "exception": false,
          "start_time": "2022-02-27T12:29:40.814968",
          "status": "completed"
        },
        "tags": [],
        "id": "0402f58c"
      },
      "source": [
        "*Эта* таблица содержит все AGNI артикулы.\n",
        "\n",
        "> `article_id` : Уникальный идентификатор артикула   \n",
        "> `prod_name` : Имя продукта <br>\n",
        "> `product_type_name` : Тип товара   \n",
        "> `index_name`: Подраздел  \n",
        "> `index_group_name` : Раздел  \n",
        "> `section_name`: Секция  \n",
        "> `garment_group_name`: Категория товара  \n",
        "> `detail_desc`: Детали  "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "279a81a0",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:40.976592Z",
          "iopub.status.busy": "2022-02-27T12:29:40.975858Z",
          "iopub.status.idle": "2022-02-27T12:29:41.008201Z",
          "shell.execute_reply": "2022-02-27T12:29:41.008740Z",
          "shell.execute_reply.started": "2022-02-08T16:06:59.659038Z"
        },
        "papermill": {
          "duration": 0.092289,
          "end_time": "2022-02-27T12:29:41.008921",
          "exception": false,
          "start_time": "2022-02-27T12:29:40.916632",
          "status": "completed"
        },
        "tags": [],
        "id": "279a81a0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "outputId": "398408cc-9a09-4192-b56c-a74543c570e2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   article_id          prod_name product_type_name  product_group_name  \\\n",
              "0   108775015          Strap top          Vest top  Garment Upper body   \n",
              "1   108775044          Strap top          Vest top  Garment Upper body   \n",
              "2   108775051      Strap top (1)          Vest top  Garment Upper body   \n",
              "3   110065001  OP T-shirt (Idro)               Bra           Underwear   \n",
              "4   110065002  OP T-shirt (Idro)               Bra           Underwear   \n",
              "\n",
              "  graphical_appearance_name colour_group_name        index_name  \\\n",
              "0                     Solid             Black        Ladieswear   \n",
              "1                     Solid             White        Ladieswear   \n",
              "2                    Stripe         Off White        Ladieswear   \n",
              "3                     Solid             Black  Lingeries/Tights   \n",
              "4                     Solid             White  Lingeries/Tights   \n",
              "\n",
              "  index_group_name            section_name garment_group_name  \\\n",
              "0       Ladieswear  Womens Everyday Basics       Jersey Basic   \n",
              "1       Ladieswear  Womens Everyday Basics       Jersey Basic   \n",
              "2       Ladieswear  Womens Everyday Basics       Jersey Basic   \n",
              "3       Ladieswear         Womens Lingerie  Under-, Nightwear   \n",
              "4       Ladieswear         Womens Lingerie  Under-, Nightwear   \n",
              "\n",
              "                                         detail_desc  \n",
              "0            Jersey top with narrow shoulder straps.  \n",
              "1            Jersey top with narrow shoulder straps.  \n",
              "2            Jersey top with narrow shoulder straps.  \n",
              "3  Microfibre T-shirt bra with underwired, moulde...  \n",
              "4  Microfibre T-shirt bra with underwired, moulde...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e1eb55b5-0b34-44e7-86ae-b9381f2a3875\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>article_id</th>\n",
              "      <th>prod_name</th>\n",
              "      <th>product_type_name</th>\n",
              "      <th>product_group_name</th>\n",
              "      <th>graphical_appearance_name</th>\n",
              "      <th>colour_group_name</th>\n",
              "      <th>index_name</th>\n",
              "      <th>index_group_name</th>\n",
              "      <th>section_name</th>\n",
              "      <th>garment_group_name</th>\n",
              "      <th>detail_desc</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>108775015</td>\n",
              "      <td>Strap top</td>\n",
              "      <td>Vest top</td>\n",
              "      <td>Garment Upper body</td>\n",
              "      <td>Solid</td>\n",
              "      <td>Black</td>\n",
              "      <td>Ladieswear</td>\n",
              "      <td>Ladieswear</td>\n",
              "      <td>Womens Everyday Basics</td>\n",
              "      <td>Jersey Basic</td>\n",
              "      <td>Jersey top with narrow shoulder straps.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>108775044</td>\n",
              "      <td>Strap top</td>\n",
              "      <td>Vest top</td>\n",
              "      <td>Garment Upper body</td>\n",
              "      <td>Solid</td>\n",
              "      <td>White</td>\n",
              "      <td>Ladieswear</td>\n",
              "      <td>Ladieswear</td>\n",
              "      <td>Womens Everyday Basics</td>\n",
              "      <td>Jersey Basic</td>\n",
              "      <td>Jersey top with narrow shoulder straps.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>108775051</td>\n",
              "      <td>Strap top (1)</td>\n",
              "      <td>Vest top</td>\n",
              "      <td>Garment Upper body</td>\n",
              "      <td>Stripe</td>\n",
              "      <td>Off White</td>\n",
              "      <td>Ladieswear</td>\n",
              "      <td>Ladieswear</td>\n",
              "      <td>Womens Everyday Basics</td>\n",
              "      <td>Jersey Basic</td>\n",
              "      <td>Jersey top with narrow shoulder straps.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>110065001</td>\n",
              "      <td>OP T-shirt (Idro)</td>\n",
              "      <td>Bra</td>\n",
              "      <td>Underwear</td>\n",
              "      <td>Solid</td>\n",
              "      <td>Black</td>\n",
              "      <td>Lingeries/Tights</td>\n",
              "      <td>Ladieswear</td>\n",
              "      <td>Womens Lingerie</td>\n",
              "      <td>Under-, Nightwear</td>\n",
              "      <td>Microfibre T-shirt bra with underwired, moulde...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>110065002</td>\n",
              "      <td>OP T-shirt (Idro)</td>\n",
              "      <td>Bra</td>\n",
              "      <td>Underwear</td>\n",
              "      <td>Solid</td>\n",
              "      <td>White</td>\n",
              "      <td>Lingeries/Tights</td>\n",
              "      <td>Ladieswear</td>\n",
              "      <td>Womens Lingerie</td>\n",
              "      <td>Under-, Nightwear</td>\n",
              "      <td>Microfibre T-shirt bra with underwired, moulde...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1eb55b5-0b34-44e7-86ae-b9381f2a3875')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e1eb55b5-0b34-44e7-86ae-b9381f2a3875 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e1eb55b5-0b34-44e7-86ae-b9381f2a3875');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-59086493-ce46-44ba-8749-94061c588161\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-59086493-ce46-44ba-8749-94061c588161')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-59086493-ce46-44ba-8749-94061c588161 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "articles"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "articles.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f48c2881",
      "metadata": {
        "papermill": {
          "duration": 0.055216,
          "end_time": "2022-02-27T12:29:43.736791",
          "exception": false,
          "start_time": "2022-02-27T12:29:43.681575",
          "status": "completed"
        },
        "tags": [],
        "id": "f48c2881"
      },
      "source": [
        "Таблица с количеством уникальных значений в каждой колонке"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "80add0fd",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:43.860396Z",
          "iopub.status.busy": "2022-02-27T12:29:43.859468Z",
          "iopub.status.idle": "2022-02-27T12:29:44.010356Z",
          "shell.execute_reply": "2022-02-27T12:29:44.009809Z",
          "shell.execute_reply.started": "2022-02-10T15:46:53.275225Z"
        },
        "papermill": {
          "duration": 0.220045,
          "end_time": "2022-02-27T12:29:44.010539",
          "exception": false,
          "start_time": "2022-02-27T12:29:43.790494",
          "status": "completed"
        },
        "tags": [],
        "id": "80add0fd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0f24d0e8-fdee-4989-9710-78cbbf32558e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "no of unique article_id: 105542\n",
            "no of unique prod_name: 45875\n",
            "no of unique product_type_name: 131\n",
            "no of unique product_group_name: 19\n",
            "no of unique graphical_appearance_name: 30\n",
            "no of unique colour_group_name: 50\n",
            "no of unique index_name: 10\n",
            "no of unique index_group_name: 5\n",
            "no of unique section_name: 56\n",
            "no of unique garment_group_name: 21\n",
            "no of unique detail_desc: 43404\n"
          ]
        }
      ],
      "source": [
        "for col in articles.columns:\n",
        "    un_n = articles[col].nunique()\n",
        "    print(f'no of unique {col}: {un_n}')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "5ea1f2ae",
      "metadata": {
        "papermill": {
          "duration": 0.049763,
          "end_time": "2022-02-27T12:29:41.109917",
          "exception": false,
          "start_time": "2022-02-27T12:29:41.060154",
          "status": "completed"
        },
        "tags": [],
        "id": "5ea1f2ae"
      },
      "source": [
        "**Анализ категории товара**\n",
        "\n",
        "Divided - молодежная и более дешевая одежда"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "articles['index_name'].value_counts()"
      ],
      "metadata": {
        "id": "9TzQtS8jioBa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0d84fdb3-1acf-4728-9f16-48f5274de181"
      },
      "id": "9TzQtS8jioBa",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "index_name\n",
              "Ladieswear                        26001\n",
              "Divided                           15149\n",
              "Menswear                          12553\n",
              "Children Sizes 92-140             12007\n",
              "Children Sizes 134-170             9214\n",
              "Baby Sizes 50-98                   8875\n",
              "Ladies Accessories                 6961\n",
              "Lingeries/Tights                   6775\n",
              "Children Accessories, Swimwear     4615\n",
              "Sport                              3392\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "a578e2eb",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:41.220988Z",
          "iopub.status.busy": "2022-02-27T12:29:41.220309Z",
          "iopub.status.idle": "2022-02-27T12:29:41.662980Z",
          "shell.execute_reply": "2022-02-27T12:29:41.662273Z",
          "shell.execute_reply.started": "2022-02-10T15:38:21.862125Z"
        },
        "papermill": {
          "duration": 0.503753,
          "end_time": "2022-02-27T12:29:41.663120",
          "exception": false,
          "start_time": "2022-02-27T12:29:41.159367",
          "status": "completed"
        },
        "tags": [],
        "id": "a578e2eb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "5a1f7c0e-d79c-4f22-b35e-da812dcf6610"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-36-3f324d43f882>:2: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.\n",
            "  ax = sns.histplot(data=articles, y='index_name', color='black', palette='Greys')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "f, ax = plt.subplots(figsize=(15, 7))\n",
        "ax = sns.histplot(data=articles, y='index_name', color='black', palette='Greys')\n",
        "ax.set_xlabel('count by index name')\n",
        "ax.set_ylabel('index name')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Visual Python: Visualization > Chart Style\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "import seaborn as sns\n",
        "plt.rc('figure', figsize=(12, 8))\n",
        "\n",
        "from matplotlib import rcParams\n",
        "rcParams['font.size'] = 21\n",
        "rcParams['axes.unicode_minus'] = False"
      ],
      "metadata": {
        "id": "2Lr5cnPybDWY"
      },
      "id": "2Lr5cnPybDWY",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "id": "617de0ab",
      "metadata": {
        "papermill": {
          "duration": 0.051179,
          "end_time": "2022-02-27T12:29:41.764931",
          "exception": false,
          "start_time": "2022-02-27T12:29:41.713752",
          "status": "completed"
        },
        "tags": [],
        "id": "617de0ab"
      },
      "source": [
        "**Анализ категории товара в зависимости от раздела**"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "articles[['garment_group_name', 'index_group_name']].head()"
      ],
      "metadata": {
        "id": "Mt9UtNtCjK7C",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "f8fc7f22-45df-4c93-852b-d045daba3eb0"
      },
      "id": "Mt9UtNtCjK7C",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  garment_group_name index_group_name\n",
              "0       Jersey Basic       Ladieswear\n",
              "1       Jersey Basic       Ladieswear\n",
              "2       Jersey Basic       Ladieswear\n",
              "3  Under-, Nightwear       Ladieswear\n",
              "4  Under-, Nightwear       Ladieswear"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f2fabb80-1c7f-45b5-8ff5-8ee18ed82e6b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>garment_group_name</th>\n",
              "      <th>index_group_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Jersey Basic</td>\n",
              "      <td>Ladieswear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Jersey Basic</td>\n",
              "      <td>Ladieswear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Jersey Basic</td>\n",
              "      <td>Ladieswear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Under-, Nightwear</td>\n",
              "      <td>Ladieswear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Under-, Nightwear</td>\n",
              "      <td>Ladieswear</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2fabb80-1c7f-45b5-8ff5-8ee18ed82e6b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f2fabb80-1c7f-45b5-8ff5-8ee18ed82e6b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f2fabb80-1c7f-45b5-8ff5-8ee18ed82e6b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cd33da79-cb48-4e47-aaa6-5a1d9966570b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cd33da79-cb48-4e47-aaa6-5a1d9966570b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cd33da79-cb48-4e47-aaa6-5a1d9966570b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"articles[['garment_group_name', 'index_group_name']]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"garment_group_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Under-, Nightwear\",\n          \"Jersey Basic\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"index_group_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ladieswear\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "f6a9e5f7",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:41.872497Z",
          "iopub.status.busy": "2022-02-27T12:29:41.871837Z",
          "iopub.status.idle": "2022-02-27T12:29:42.811709Z",
          "shell.execute_reply": "2022-02-27T12:29:42.811054Z",
          "shell.execute_reply.started": "2022-02-10T15:39:24.806059Z"
        },
        "papermill": {
          "duration": 0.996323,
          "end_time": "2022-02-27T12:29:42.811915",
          "exception": false,
          "start_time": "2022-02-27T12:29:41.815592",
          "status": "completed"
        },
        "tags": [],
        "id": "f6a9e5f7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 438
        },
        "outputId": "06c80456-172b-4d4f-9d32-a39cbde05f76"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "f, ax = plt.subplots(figsize=(15, 7))\n",
        "ax = sns.histplot(data=articles, y='garment_group_name', color='orange', hue='index_group_name', multiple=\"stack\")\n",
        "ax.set_xlabel('count by garment group')\n",
        "ax.set_ylabel('garment group')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Jersey fancy - самый популярный, особенно для женщин и детей (обычная базовая одежда)\n",
        "- Аксессуары - вторая по популярности категория, скорее всего из-за своей стоимости"
      ],
      "metadata": {
        "id": "yRFo5PP2-LjB"
      },
      "id": "yRFo5PP2-LjB"
    },
    {
      "cell_type": "markdown",
      "id": "83bdc5b5",
      "metadata": {
        "papermill": {
          "duration": 0.053871,
          "end_time": "2022-02-27T12:29:42.919434",
          "exception": false,
          "start_time": "2022-02-27T12:29:42.865563",
          "status": "completed"
        },
        "tags": [],
        "id": "83bdc5b5"
      },
      "source": [
        "Можно обратить внимание, что раздел еще может делиться на подраздел"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "2e873909",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:43.037866Z",
          "iopub.status.busy": "2022-02-27T12:29:43.036910Z",
          "iopub.status.idle": "2022-02-27T12:29:43.220216Z",
          "shell.execute_reply": "2022-02-27T12:29:43.219653Z",
          "shell.execute_reply.started": "2022-02-10T15:43:44.807918Z"
        },
        "papermill": {
          "duration": 0.246881,
          "end_time": "2022-02-27T12:29:43.220358",
          "exception": false,
          "start_time": "2022-02-27T12:29:42.973477",
          "status": "completed"
        },
        "tags": [],
        "id": "2e873909",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3ee3c619-8ff6-46fb-bbf0-72fe1d980807"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "index_group_name  index_name                    \n",
              "Baby/Children     Baby Sizes 50-98                   8875\n",
              "                  Children Accessories, Swimwear     4615\n",
              "                  Children Sizes 134-170             9214\n",
              "                  Children Sizes 92-140             12007\n",
              "Divided           Divided                           15149\n",
              "Ladieswear        Ladies Accessories                 6961\n",
              "                  Ladieswear                        26001\n",
              "                  Lingeries/Tights                   6775\n",
              "Menswear          Menswear                          12553\n",
              "Sport             Sport                              3392\n",
              "Name: article_id, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "articles.groupby(['index_group_name', 'index_name']).count()['article_id']"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "07a1e488",
      "metadata": {
        "papermill": {
          "duration": 0.052832,
          "end_time": "2022-02-27T12:29:43.325759",
          "exception": false,
          "start_time": "2022-02-27T12:29:43.272927",
          "status": "completed"
        },
        "tags": [],
        "id": "07a1e488"
      },
      "source": [
        "Изучаем разнообразие именований товаров в каждой категории товара."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "fca9b794",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:43.441547Z",
          "iopub.status.busy": "2022-02-27T12:29:43.440482Z",
          "iopub.status.idle": "2022-02-27T12:29:43.623568Z",
          "shell.execute_reply": "2022-02-27T12:29:43.622801Z",
          "shell.execute_reply.started": "2022-02-10T15:44:29.04768Z"
        },
        "papermill": {
          "duration": 0.244547,
          "end_time": "2022-02-27T12:29:43.623757",
          "exception": false,
          "start_time": "2022-02-27T12:29:43.379210",
          "status": "completed"
        },
        "tags": [],
        "id": "fca9b794",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "45d865f0-2e3a-414c-baa0-8e5f0313493f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "product_group_name     product_type_name       \n",
              "Accessories            Accessories set                 7\n",
              "                       Alice band                      6\n",
              "                       Baby Bib                        3\n",
              "                       Bag                          1280\n",
              "                       Beanie                         56\n",
              "                       Belt                          458\n",
              "                       Bracelet                      180\n",
              "                       Braces                          3\n",
              "                       Bucket hat                      7\n",
              "                       Cap                            13\n",
              "                       Cap/peaked                    573\n",
              "                       Dog Wear                       20\n",
              "                       Earring                      1159\n",
              "                       Earrings                       11\n",
              "                       Eyeglasses                      2\n",
              "                       Felt hat                       10\n",
              "                       Giftbox                        15\n",
              "                       Gloves                        367\n",
              "                       Hair clip                     244\n",
              "                       Hair string                   238\n",
              "                       Hair ties                      24\n",
              "                       Hair/alice band               854\n",
              "                       Hairband                        2\n",
              "                       Hat/beanie                   1349\n",
              "                       Hat/brim                      396\n",
              "                       Headband                        1\n",
              "                       Necklace                      581\n",
              "                       Other accessories            1034\n",
              "                       Ring                          240\n",
              "                       Scarf                        1013\n",
              "                       Soft Toys                      46\n",
              "                       Straw hat                       6\n",
              "                       Sunglasses                    621\n",
              "                       Tie                           141\n",
              "                       Umbrella                       26\n",
              "                       Wallet                         77\n",
              "                       Watch                          73\n",
              "                       Waterbottle                    22\n",
              "Bags                   Backpack                        6\n",
              "                       Bumbag                          1\n",
              "                       Cross-body bag                  5\n",
              "                       Shoulder bag                    2\n",
              "                       Tote bag                        2\n",
              "                       Weekend/Gym bag                 9\n",
              "Cosmetic               Chem. cosmetics                 3\n",
              "                       Fine cosmetics                 46\n",
              "Fun                    Toy                             2\n",
              "Furniture              Side table                     13\n",
              "Garment Full body      Costumes                       90\n",
              "                       Dress                       10362\n",
              "                       Dungarees                     309\n",
              "                       Garment Set                  1320\n",
              "                       Jumpsuit/Playsuit            1147\n",
              "                       Outdoor overall                64\n",
              "Garment Lower body     Leggings/Tights              1878\n",
              "                       Outdoor trousers              130\n",
              "                       Shorts                       3939\n",
              "                       Skirt                        2696\n",
              "                       Trousers                    11169\n",
              "Garment Upper body     Blazer                       1110\n",
              "                       Blouse                       3979\n",
              "                       Bodysuit                      913\n",
              "                       Cardigan                     1550\n",
              "                       Coat                          460\n",
              "                       Hoodie                       2356\n",
              "                       Jacket                       3940\n",
              "                       Outdoor Waistcoat             154\n",
              "                       Polo shirt                    449\n",
              "                       Shirt                        3405\n",
              "                       Sweater                      9302\n",
              "                       T-shirt                      7904\n",
              "                       Tailored Waistcoat             73\n",
              "                       Top                          4155\n",
              "                       Vest top                     2991\n",
              "Garment and Shoe care  Clothing mist                   1\n",
              "                       Sewing kit                      1\n",
              "                       Stain remover spray             2\n",
              "                       Washing bag                     1\n",
              "                       Wood balls                      1\n",
              "                       Zipper head                     3\n",
              "Interior textile       Blanket                         1\n",
              "                       Cushion                         1\n",
              "                       Towel                           1\n",
              "Items                  Dog wear                        7\n",
              "                       Keychain                        1\n",
              "                       Mobile case                     4\n",
              "                       Umbrella                        3\n",
              "                       Wireless earphone case          2\n",
              "Nightwear              Night gown                    171\n",
              "                       Pyjama bottom                 220\n",
              "                       Pyjama jumpsuit/playsuit      388\n",
              "                       Pyjama set                   1120\n",
              "Shoes                  Ballerinas                    372\n",
              "                       Bootie                         31\n",
              "                       Boots                        1028\n",
              "                       Flat shoe                     165\n",
              "                       Flat shoes                     10\n",
              "                       Flip flop                     125\n",
              "                       Heeled sandals                202\n",
              "                       Heels                          22\n",
              "                       Moccasins                       4\n",
              "                       Other shoe                    395\n",
              "                       Pre-walkers                     1\n",
              "                       Pumps                         188\n",
              "                       Sandals                       757\n",
              "                       Slippers                      249\n",
              "                       Sneakers                     1621\n",
              "                       Wedge                         113\n",
              "Socks & Tights         Leg warmers                     7\n",
              "                       Socks                        1889\n",
              "                       Underwear Tights              546\n",
              "Stationery             Marker pen                      5\n",
              "Swimwear               Bikini top                    850\n",
              "                       Sarong                         66\n",
              "                       Swimsuit                      662\n",
              "                       Swimwear bottom              1307\n",
              "                       Swimwear set                  192\n",
              "                       Swimwear top                   50\n",
              "Underwear              Bra                          2212\n",
              "                       Bra extender                    1\n",
              "                       Kids Underwear top             96\n",
              "                       Long John                      30\n",
              "                       Nipple covers                  19\n",
              "                       Robe                          136\n",
              "                       Underdress                     20\n",
              "                       Underwear body                174\n",
              "                       Underwear bottom             2748\n",
              "                       Underwear corset                7\n",
              "                       Underwear set                  47\n",
              "Underwear/nightwear    Sleep Bag                       6\n",
              "                       Sleeping sack                  48\n",
              "Unknown                Unknown                       121\n",
              "Name: article_id, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ],
      "source": [
        "pd.options.display.max_rows = None\n",
        "articles.groupby(['product_group_name', 'product_type_name']).count()['article_id']"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Какого типа товаров больше**"
      ],
      "metadata": {
        "id": "TVa3BDtN_Hmp"
      },
      "id": "TVa3BDtN_Hmp"
    },
    {
      "cell_type": "code",
      "source": [
        "top_item = articles.groupby(['product_type_name']).count()['article_id'].sort_values(ascending=False).iloc[:10]\n",
        "top_item"
      ],
      "metadata": {
        "id": "jkwRQAju_LFP",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 158
        },
        "outputId": "6e80a7d3-ff6d-41fb-e86b-1cd86e63ac64"
      },
      "id": "jkwRQAju_LFP",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'articles' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-53ae625b736f>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtop_item\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marticles\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'product_type_name'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'article_id'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msort_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mascending\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mtop_item\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'articles' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "f, ax = plt.subplots(figsize=(15, 7))\n",
        "ax = sns.barplot(x=top_item.index, y=top_item.values, color='orange')\n",
        "ax.set_xlabel('count by type name')\n",
        "ax.set_ylabel('type name')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "GNFD8Zuc_VRE"
      },
      "id": "GNFD8Zuc_VRE",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**В какой категории товаров больше**"
      ],
      "metadata": {
        "id": "0lreAShnAEwx"
      },
      "id": "0lreAShnAEwx"
    },
    {
      "cell_type": "code",
      "source": [
        "top_group = articles.groupby(['product_group_name']).count()['article_id'].sort_values(ascending=False).iloc[:10]\n",
        "top_group"
      ],
      "metadata": {
        "id": "nhuwvqt3AEw0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0d8eed67-8648-4800-d01d-0baacabd8de7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "product_group_name\n",
              "Garment Upper body    42741\n",
              "Garment Lower body    19812\n",
              "Garment Full body     13292\n",
              "Accessories           11158\n",
              "Underwear              5490\n",
              "Shoes                  5283\n",
              "Swimwear               3127\n",
              "Socks & Tights         2442\n",
              "Nightwear              1899\n",
              "Unknown                 121\n",
              "Name: article_id, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 93
        }
      ],
      "id": "nhuwvqt3AEw0"
    },
    {
      "cell_type": "code",
      "source": [
        "f, ax = plt.subplots(figsize=(15, 7))\n",
        "sns.barplot(x=top_group.index, y=top_group.values, color='orange')\n",
        "plt.xlabel('count by group name')\n",
        "plt.ylabel('group name')\n",
        "plt.xticks(np.arange(len(top_group.index)), top_group.index, rotation=60)\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "SkMbVAFeAEw3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 528
        },
        "outputId": "ff479621-8e2e-445a-802a-810bb074023b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "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2rRpzJs3L96x6r3qDyhfeuklTjzxREKhUJwTHZmqX9Pbtm3jzTff5PXXX+fTTz+Nc6qv5zvaBq76zfiGDRt4/fXXAejXrx9PPPEECxcujGe0I85/7h38wQ9+wLnnnsu0adN47733AP+g16T6TdBLL71EJBKhf//+jB8/ng8//JDdu3cTDAbjnLB+qX4+LVmyhFWrVhEKhYhGo2zYsCH2qbd7/w9O9XPv5Zdfpri4mJycHHbt2kVCwhdf9+ve/69X/Zq85557aNasGccccwwffvghq1evZvPmzXFO13C8+OKL/Pa3v+Wdd94Bvph3X9uHRyAQYO/evXzyySd07NiRhQsX8vjjj3PGGWewYcMGNm3aFO+I9VqjRo3Ytm0bv/vd71i3bh2rVq3yvc63UP279Je//CV33nknixYt4pFHHuHZZ5+lrKwszun2F5wxY8aMeIdQ7Vi3bh3HHXccANOnT2fdunXcd999hEIh3nvvPf75z39y+umnc/zxx8c5af332WefkZSURFlZGYMHD2bbtm384x//oH379uzevZt33nmHH/7wh+5B/AaffvopzZs354033uCRRx7hd7/7HZs3b6awsJAnnniCtWvX0q1bN5KTk4lGo+7V5su9hjfddBN33nkn27dvZ/78+dx8882UlZXRq1cv5+kQNWrUiBNPPJH333+f1atXEwgEaNu2rfP4DVasWMEbb7zBjTfeyIsvvsisWbP48MMPSU5OpkOHDvGO1yCcdNJJpKSkkJeXx1tvvUWnTp1ITk6Od6wGo6ysjLZt2zJv3jw++eQTpkyZQq9evbj33nvp378/qamp8Y5Yb+3bt49jjz2Wjh07smnTJgoKCggGg6SlpdG0adN4xzsiRCIRGjVqxDvvvMP777/P73//e9LT09m9ezfr16/n1VdfJSMjg1atWsU7KmA5bLCqqqoYN24cDz74IOeddx6XXXYZ2dnZnHbaaUSjUXr37k15eTlLliyhR48etGjRIt6R662Kigruvvtu1q1bR6dOnejVqxfNmjUjJSWF5557jmOOOYYVK1bw/vvv07t379ieCH3p9ddf56abbiIxMZG2bdty2WWX0bNnT1JTUznrrLNo3bo1TZo0Yffu3Zx++um+Uf835eXlvP/++3z00UcsXLiQc889l1/96lc89thjdOzYMfYBkGoWiUTYu3cv5557LieffDKfffYZr7zyCm+//TY/+MEP3HN9AE2aNOHjjz9m4cKFlJSUcP3115Oamkpubi6DBg3y9fotVX8ItnXrVhISEjjjjDMYNWoUb7/9NnPmzOHjjz/mvPPO80PHb+m9996jSZMmvPrqq9x1111MmDCBESNG8KMf/YhWrVoxa9Ys0tPTGTlypB9Ifo3qQrNt2zb27t1LamoqF1xwAUlJSTz55JO8+OKLdOzY0WJ9EKpfw9OmTePzzz9nyJAhhEIhOnbsSDAYZOfOnfTq1YvExMQ4J/2C5bCBatSoEZdeeilbt27lf/7nf9iwYQPdunXjpJNOokOHDrRp04Z+/fqxbt06tmzZEjvPQV+1Y8cOADZu3Mjy5ctp374955xzDqeddhoXXHABvXv35vLLL+fll1+mffv2/qL8Gq1bt+bEE0/kL3/5C//7v//LMcccw5lnnsmJJ55I69at6d69O23btmX27Nl07tz5qD+n4d/fqCQkJHDyySezZs0aBg0axPnnn8+aNWtYvnw5V199dZyT1n/Vb3AWLlzIY489xtNPP80bb7zBWWedRb9+/UhKSuL444/npJNOinfUeqX6ORiNRmnevDnl5eW0a9eOyy67jBNPPJF58+bRu3dvunTpEu+oR6R9+/bRqFEj/vWvf3HXXXeRm5vLO++8Q1JSEhdddBE9e/bkvffeo3fv3vGOesRau3YtEyZM4Nlnn+Xaa6+lQ4cOVFVV0bRpU8LhMOFwmJ/+9Kc0adLEcvg1qgvNjTfeyKuvvsrSpUspKSmhZ8+ejBo1im3btnHWWWfRpEmTOCet36qfWzt27CAUCpGXl8fSpUtp27Ytbdu2pV27dnTu3JmkpKR4R42xHDZA//5L7uWXX+aMM86guLiYu+66K/apebXCwkJat25Np06d4hW3XotGoxx77LFkZmby97//nfXr1/POO+/wzjvvEAwGadu2LcFgkGAwyLx582jbti2ZmZnxjl2vVFZWEgwGqaqq4s033yQQCLBs2TLWr19Peno6LVq0ICEhgaSkJP7yl79w1VVX1ZtPz+IpEAjw1FNPsWLFCt56663Ym5uSkhJ++ctfct1119GmTZt4x6z3GjVqRHl5OTNmzODGG29kzZo1lJaW8uc//5nS0lKGDRvmoZH/obq4lJaW8thjj/GnP/2JDh06MGDAAJKSknj22WdZu3YtU6dOjXfUI1b13+gpU6YwdOhQGjVqxLJly/jkk0947733OPXUUxkyZEicUx7Z2rdvT0pKCh988AGFhYUAnHnmmQD88Y9/5Pzzz+f444+PXaxKX6p+H/nggw9SXl7OT37yE3JycgiFQvz9739n9+7dXHTRRRx77LEW6xoEAgEqKir4/e9/T/fu3Rk/fjxlZWU88MADvPLKK3z/+98nJSUl3jH346uhAap+kf75z39m9erV/OIXv+CBBx7gr3/9K7m5uZx55pl8+OGHRCIRrrrqKkaMGBHnxPXf/Pnz2bNnD/fffz8//elPadWqFQ888AB33nknmzdvprKykquvvppBgwbFO2q907hxYwBuvfVWhg4dyn333cdDDz3E7t27ufTSS3n00UeprKykcePGPPLII/Xq07N42LdvH4FAgNdee40nnniC7t2788gjj/Cvf/2LqqoqMjIymDp1Kuedd168ox4xnnvuOfr160fTpk356KOPeOCBBxg1ahRLlixh5cqV8Y5X71S/Ub711ltJTU2ladOmPPnkkyQmJrJv3z569erFLbfcEueUR7533nmHxMRE+vfvT0FBAXPmzKFfv36xvYj6dqovLrVv3z4uvPBCnnrqKe644w7y8vK49NJLmTdvHsuWLYsdLWCx+arqQvP+++8zceJEHnvsMcaOHcvEiRP59NNP+eSTT2J/252/mlVWVtKkSRMWLVpEIBBg3LhxzJs3jyZNmrBu3bp4x/sKy2ED1rZtW0499dTYzx07dmTChAmMHDmSDh06EAwG683Jr/VV9WFVe/bsoXfv3jRr1owePXowfPhwgsEgiYmJpKWl0bhxY/r37x/vuPVSNBqlvLycUChEaWkp5eXlpKamcuedd3LuuefSuHFjGjduzL59+zwkly/fmD/44INMmzaNDz74gIEDB5KZmcmaNWtYtGhR7NNvHZzevXtz2WWXUVhYyFlnnQXA8ccfzxVXXMGPfvSjOKern9atW0dlZSUjRoxg8+bN/OxnPwPg7rvvpri4mIyMjDgnPPJ16NCByZMns27dOtLS0ujUqRMXXnghp5xyCn379o13vCNW9e/QRx99lDlz5vC3v/2NjIwM/vrXv3LxxReTmJjI3XffDXiF8QPZt28fiYmJTJgwgRYtWrB7924GDRpEy5YtadWqVexwZ6/yfGDVc7N161ZKSkq4+uqrKS8v59JLL+Wt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\n"
          },
          "metadata": {}
        }
      ],
      "id": "SkMbVAFeAEw3"
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Какой графический элемент присутствует чаще всего**"
      ],
      "metadata": {
        "id": "f0u8kC3OAgyR"
      },
      "id": "f0u8kC3OAgyR"
    },
    {
      "cell_type": "code",
      "source": [
        "top_graph = articles.groupby(['graphical_appearance_name']).count()['article_id'].sort_values(ascending=False).iloc[:10]\n",
        "top_graph"
      ],
      "metadata": {
        "id": "OS_wkrr9Ano7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "18a59e70-f7b1-4df3-8d29-8bf62c249726"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "graphical_appearance_name\n",
              "Solid               49747\n",
              "All over pattern    17165\n",
              "Melange              5938\n",
              "Stripe               4990\n",
              "Denim                4842\n",
              "Front print          3215\n",
              "Placement print      3098\n",
              "Check                2178\n",
              "Colour blocking      1830\n",
              "Lace                 1513\n",
              "Name: article_id, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ],
      "id": "OS_wkrr9Ano7"
    },
    {
      "cell_type": "code",
      "source": [
        "f, ax = plt.subplots(figsize=(15, 7))\n",
        "sns.barplot(x=top_graph.index, y=top_graph.values, color='orange')\n",
        "plt.xlabel('count by graphical appearance name')\n",
        "plt.ylabel('graphical appearance name')\n",
        "plt.xticks(np.arange(len(top_graph.index)), top_graph.index, rotation=60)\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "cuCIzhnTAno_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 506
        },
        "outputId": "24d9e767-5513-4019-c195-78a869d7816f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "id": "cuCIzhnTAno_"
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Какой цвет присутствует чаще всего**"
      ],
      "metadata": {
        "id": "i8QrfW99Eir5"
      },
      "id": "i8QrfW99Eir5"
    },
    {
      "cell_type": "code",
      "source": [
        "top_color = articles.groupby(['colour_group_name']).count()['article_id'].sort_values(ascending=False).iloc[:10]\n",
        "top_color"
      ],
      "metadata": {
        "id": "dJ3tBJXIEir8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d697d9f4-a45e-4fc6-c022-8392f32c81b5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "colour_group_name\n",
              "Black             22670\n",
              "Dark Blue         12171\n",
              "White              9542\n",
              "Light Pink         5811\n",
              "Grey               4487\n",
              "Light Beige        3356\n",
              "Blue               3308\n",
              "Red                3056\n",
              "Light Blue         3012\n",
              "Greenish Khaki     2767\n",
              "Name: article_id, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ],
      "id": "dJ3tBJXIEir8"
    },
    {
      "cell_type": "code",
      "source": [
        "f, ax = plt.subplots(figsize=(15, 7))\n",
        "sns.barplot(x=top_color.index, y=top_color.values, color='orange')\n",
        "plt.xlabel('count by color group name')\n",
        "plt.ylabel('color group name')\n",
        "plt.xticks(np.arange(len(top_color.index)), top_color.index, rotation=60)\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "2VpfwxriEir_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 503
        },
        "outputId": "e5d1cf7d-b0c6-409e-aa07-990b7f5f2c7e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "id": "2VpfwxriEir_"
    },
    {
      "cell_type": "markdown",
      "id": "c732d07e",
      "metadata": {
        "papermill": {
          "duration": 0.055792,
          "end_time": "2022-02-27T12:29:44.122731",
          "exception": false,
          "start_time": "2022-02-27T12:29:44.066939",
          "status": "completed"
        },
        "tags": [],
        "id": "c732d07e"
      },
      "source": [
        "## Customers"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "df49b1ec",
      "metadata": {
        "papermill": {
          "duration": 0.05411,
          "end_time": "2022-02-27T12:29:44.348993",
          "exception": false,
          "start_time": "2022-02-27T12:29:44.294883",
          "status": "completed"
        },
        "tags": [],
        "id": "df49b1ec"
      },
      "source": [
        "\n",
        "> `customer_id` : Уникальный идентификатор клиента  \n",
        "> `Active` : 1 или пропуск     \n",
        "> `club_member_status` : Статус в клубе    \n",
        "> `fashion_news_frequency` : Как часто AGNI может присылать новости клиенту    \n",
        "> `age` : Возраст клиента    \n",
        "> `postal_code` : Почтовый индекс клиента"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "243de262",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:44.478052Z",
          "iopub.status.busy": "2022-02-27T12:29:44.477122Z",
          "iopub.status.idle": "2022-02-27T12:29:44.481509Z",
          "shell.execute_reply": "2022-02-27T12:29:44.480868Z"
        },
        "papermill": {
          "duration": 0.078465,
          "end_time": "2022-02-27T12:29:44.481680",
          "exception": false,
          "start_time": "2022-02-27T12:29:44.403215",
          "status": "completed"
        },
        "tags": [],
        "id": "243de262",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "345858b1-d7e4-4006-9395-48d1134e3815"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                         customer_id  Active  \\\n",
              "0  00000dbacae5abe5e23885899a1fa44253a17956c6d1c3...     NaN   \n",
              "1  0000423b00ade91418cceaf3b26c6af3dd342b51fd051e...     NaN   \n",
              "2  000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...     NaN   \n",
              "3  00005ca1c9ed5f5146b52ac8639a40ca9d57aeff4d1bd2...     NaN   \n",
              "4  00006413d8573cd20ed7128e53b7b13819fe5cfc2d801f...  1.0000   \n",
              "\n",
              "  club_member_status fashion_news_frequency     age  \\\n",
              "0             ACTIVE                   NONE 49.0000   \n",
              "1             ACTIVE                   NONE 25.0000   \n",
              "2             ACTIVE                   NONE 24.0000   \n",
              "3             ACTIVE                   NONE 54.0000   \n",
              "4             ACTIVE              Regularly 52.0000   \n",
              "\n",
              "                                         postal_code  \n",
              "0  52043ee2162cf5aa7ee79974281641c6f11a68d276429a...  \n",
              "1  2973abc54daa8a5f8ccfe9362140c63247c5eee03f1d93...  \n",
              "2  64f17e6a330a85798e4998f62d0930d14db8db1c054af6...  \n",
              "3  5d36574f52495e81f019b680c843c443bd343d5ca5b1c2...  \n",
              "4  25fa5ddee9aac01b35208d01736e57942317d756b32ddd...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0696b673-3abb-4190-8ddb-d1cee557420f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>Active</th>\n",
              "      <th>club_member_status</th>\n",
              "      <th>fashion_news_frequency</th>\n",
              "      <th>age</th>\n",
              "      <th>postal_code</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>00000dbacae5abe5e23885899a1fa44253a17956c6d1c3...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>49.0000</td>\n",
              "      <td>52043ee2162cf5aa7ee79974281641c6f11a68d276429a...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0000423b00ade91418cceaf3b26c6af3dd342b51fd051e...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>25.0000</td>\n",
              "      <td>2973abc54daa8a5f8ccfe9362140c63247c5eee03f1d93...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>24.0000</td>\n",
              "      <td>64f17e6a330a85798e4998f62d0930d14db8db1c054af6...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>00005ca1c9ed5f5146b52ac8639a40ca9d57aeff4d1bd2...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>54.0000</td>\n",
              "      <td>5d36574f52495e81f019b680c843c443bd343d5ca5b1c2...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>00006413d8573cd20ed7128e53b7b13819fe5cfc2d801f...</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>Regularly</td>\n",
              "      <td>52.0000</td>\n",
              "      <td>25fa5ddee9aac01b35208d01736e57942317d756b32ddd...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0696b673-3abb-4190-8ddb-d1cee557420f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0696b673-3abb-4190-8ddb-d1cee557420f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0696b673-3abb-4190-8ddb-d1cee557420f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 99
        }
      ],
      "source": [
        "pd.options.display.max_rows = 50\n",
        "customers.head()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "customers.shape"
      ],
      "metadata": {
        "id": "VSiLlAxu4IgE",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "204e54b4-3f07-4e5f-b2e9-c856b14a3929"
      },
      "id": "VSiLlAxu4IgE",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1371980, 6)"
            ]
          },
          "metadata": {},
          "execution_count": 100
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "papermill": {
          "duration": 0.055216,
          "end_time": "2022-02-27T12:29:43.736791",
          "exception": false,
          "start_time": "2022-02-27T12:29:43.681575",
          "status": "completed"
        },
        "tags": [],
        "id": "1qFMTCod4MKL"
      },
      "source": [
        "Таблица с количеством уникальных значений в каждой колонке"
      ],
      "id": "1qFMTCod4MKL"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:43.860396Z",
          "iopub.status.busy": "2022-02-27T12:29:43.859468Z",
          "iopub.status.idle": "2022-02-27T12:29:44.010356Z",
          "shell.execute_reply": "2022-02-27T12:29:44.009809Z",
          "shell.execute_reply.started": "2022-02-10T15:46:53.275225Z"
        },
        "papermill": {
          "duration": 0.220045,
          "end_time": "2022-02-27T12:29:44.010539",
          "exception": false,
          "start_time": "2022-02-27T12:29:43.790494",
          "status": "completed"
        },
        "tags": [],
        "id": "AUADqyD-4MKN",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2af39e93-3029-4e16-8771-52a3d8421da1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "no of unique customer_id: 1371980\n",
            "no of unique Active: 1\n",
            "no of unique club_member_status: 3\n",
            "no of unique fashion_news_frequency: 4\n",
            "no of unique age: 84\n",
            "no of unique postal_code: 352899\n"
          ]
        }
      ],
      "source": [
        "for col in customers.columns:\n",
        "    un_n = customers[col].nunique()\n",
        "    print(f'no of unique {col}: {un_n}')"
      ],
      "id": "AUADqyD-4MKN"
    },
    {
      "cell_type": "markdown",
      "id": "5785de0f",
      "metadata": {
        "papermill": {
          "duration": 0.05444,
          "end_time": "2022-02-27T12:29:44.590937",
          "exception": false,
          "start_time": "2022-02-27T12:29:44.536497",
          "status": "completed"
        },
        "tags": [],
        "id": "5785de0f"
      },
      "source": [
        "Убедимся, что нет дубликатов в id клиентов"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "e5832877",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:44.707367Z",
          "iopub.status.busy": "2022-02-27T12:29:44.706342Z",
          "iopub.status.idle": "2022-02-27T12:29:45.466042Z",
          "shell.execute_reply": "2022-02-27T12:29:45.465500Z",
          "shell.execute_reply.started": "2022-02-09T15:55:44.694583Z"
        },
        "papermill": {
          "duration": 0.820526,
          "end_time": "2022-02-27T12:29:45.466199",
          "exception": false,
          "start_time": "2022-02-27T12:29:44.645673",
          "status": "completed"
        },
        "tags": [],
        "id": "e5832877",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "42bd1617-4955-4bb0-e0ce-d56c065d95b4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 102
        }
      ],
      "source": [
        "customers.shape[0] - customers['customer_id'].nunique()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "38a8f204",
      "metadata": {
        "papermill": {
          "duration": 0.058603,
          "end_time": "2022-02-27T12:29:45.580146",
          "exception": false,
          "start_time": "2022-02-27T12:29:45.521543",
          "status": "completed"
        },
        "tags": [],
        "id": "38a8f204"
      },
      "source": [
        "У нас есть очень большое количество клиентов на одном индексе - 120303. Это может быть либо какой-то почтовый индекс, которым заполняют пропуски или же это может огромный распределительный центр или постамат"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8693c9bd",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:45.702799Z",
          "iopub.status.busy": "2022-02-27T12:29:45.701692Z",
          "iopub.status.idle": "2022-02-27T12:29:47.917366Z",
          "shell.execute_reply": "2022-02-27T12:29:47.916832Z",
          "shell.execute_reply.started": "2022-02-09T15:55:46.781383Z"
        },
        "papermill": {
          "duration": 2.279725,
          "end_time": "2022-02-27T12:29:47.917555",
          "exception": false,
          "start_time": "2022-02-27T12:29:45.637830",
          "status": "completed"
        },
        "tags": [],
        "id": "8693c9bd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "381136f2-1075-4514-b441-3478ed23aa8c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                              postal_code  customer_id\n",
              "61034   2c29ae653a9282cce4151bd87643c907644e09541abc28...       120303\n",
              "281937  cc4ed85e30f4977dae47662ddc468cd2eec11472de6fac...          261\n",
              "156090  714976379549eb90aae4a71bca6c7402cc646ae7c40f6c...          159\n",
              "171208  7c1fa3b0ec1d37ce2c3f34f63bd792f3b4494f324b6be5...          157\n",
              "126228  5b7eb31eabebd3277de632b82267286d847fd5d44287ee...          156"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7926e7ae-1f7d-45a1-885f-e46022bbd55e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>postal_code</th>\n",
              "      <th>customer_id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>61034</th>\n",
              "      <td>2c29ae653a9282cce4151bd87643c907644e09541abc28...</td>\n",
              "      <td>120303</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>281937</th>\n",
              "      <td>cc4ed85e30f4977dae47662ddc468cd2eec11472de6fac...</td>\n",
              "      <td>261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156090</th>\n",
              "      <td>714976379549eb90aae4a71bca6c7402cc646ae7c40f6c...</td>\n",
              "      <td>159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171208</th>\n",
              "      <td>7c1fa3b0ec1d37ce2c3f34f63bd792f3b4494f324b6be5...</td>\n",
              "      <td>157</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>126228</th>\n",
              "      <td>5b7eb31eabebd3277de632b82267286d847fd5d44287ee...</td>\n",
              "      <td>156</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7926e7ae-1f7d-45a1-885f-e46022bbd55e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7926e7ae-1f7d-45a1-885f-e46022bbd55e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7926e7ae-1f7d-45a1-885f-e46022bbd55e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 103
        }
      ],
      "source": [
        "data_postal = customers.groupby('postal_code', as_index=False).count()[['postal_code', 'customer_id']].sort_values('customer_id', ascending=False)\n",
        "data_postal.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "62b8d966",
      "metadata": {
        "papermill": {
          "duration": 0.057605,
          "end_time": "2022-02-27T12:29:48.032941",
          "exception": false,
          "start_time": "2022-02-27T12:29:47.975336",
          "status": "completed"
        },
        "tags": [],
        "id": "62b8d966"
      },
      "source": [
        "При этом возраста, статус в клубе различны, как и айди клиента"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_postal['postal_code'].iloc[0]"
      ],
      "metadata": {
        "id": "TX893vWF4cmK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "outputId": "92549868-806a-4386-afca-5e3fdffe645a"
      },
      "id": "TX893vWF4cmK",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'2c29ae653a9282cce4151bd87643c907644e09541abc28ae87dea0d1f6603b1c'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "67bf628d",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:48.384304Z",
          "iopub.status.busy": "2022-02-27T12:29:48.383320Z",
          "iopub.status.idle": "2022-02-27T12:29:48.422090Z",
          "shell.execute_reply": "2022-02-27T12:29:48.421460Z",
          "shell.execute_reply.started": "2022-02-09T15:55:52.044182Z"
        },
        "papermill": {
          "duration": 0.333883,
          "end_time": "2022-02-27T12:29:48.422251",
          "exception": false,
          "start_time": "2022-02-27T12:29:48.088368",
          "status": "completed"
        },
        "tags": [],
        "id": "67bf628d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "adf41ae7-16db-44c9-8e44-fad5c60f077d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          customer_id  Active  \\\n",
              "5   000064249685c11552da43ef22a5030f35a147f723d5b0...     NaN   \n",
              "8   00007e8d4e54114b5b2a9b51586325a8d0fa74ea23ef77...     NaN   \n",
              "9   00008469a21b50b3d147c97135e25b4201a8c58997f787...     NaN   \n",
              "11  000097d91384a0c14893c09ed047a963c4fc6a5c021044...     NaN   \n",
              "14  0000ae1bbb25e04bdc7e35f718e852adfb3fbb72ef38b3...  1.0000   \n",
              "\n",
              "   club_member_status fashion_news_frequency     age  \\\n",
              "5                 NaN                    NaN     NaN   \n",
              "8              ACTIVE                   NONE 20.0000   \n",
              "9              ACTIVE                   NONE 20.0000   \n",
              "11             ACTIVE                   NONE 31.0000   \n",
              "14             ACTIVE              Regularly 29.0000   \n",
              "\n",
              "                                          postal_code  \n",
              "5   2c29ae653a9282cce4151bd87643c907644e09541abc28...  \n",
              "8   2c29ae653a9282cce4151bd87643c907644e09541abc28...  \n",
              "9   2c29ae653a9282cce4151bd87643c907644e09541abc28...  \n",
              "11  2c29ae653a9282cce4151bd87643c907644e09541abc28...  \n",
              "14  2c29ae653a9282cce4151bd87643c907644e09541abc28...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-69734655-2078-4271-9ad9-e91efdef8f5b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>Active</th>\n",
              "      <th>club_member_status</th>\n",
              "      <th>fashion_news_frequency</th>\n",
              "      <th>age</th>\n",
              "      <th>postal_code</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>000064249685c11552da43ef22a5030f35a147f723d5b0...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2c29ae653a9282cce4151bd87643c907644e09541abc28...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>00007e8d4e54114b5b2a9b51586325a8d0fa74ea23ef77...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>20.0000</td>\n",
              "      <td>2c29ae653a9282cce4151bd87643c907644e09541abc28...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>00008469a21b50b3d147c97135e25b4201a8c58997f787...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>20.0000</td>\n",
              "      <td>2c29ae653a9282cce4151bd87643c907644e09541abc28...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>000097d91384a0c14893c09ed047a963c4fc6a5c021044...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>31.0000</td>\n",
              "      <td>2c29ae653a9282cce4151bd87643c907644e09541abc28...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>0000ae1bbb25e04bdc7e35f718e852adfb3fbb72ef38b3...</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>Regularly</td>\n",
              "      <td>29.0000</td>\n",
              "      <td>2c29ae653a9282cce4151bd87643c907644e09541abc28...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-69734655-2078-4271-9ad9-e91efdef8f5b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-69734655-2078-4271-9ad9-e91efdef8f5b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-69734655-2078-4271-9ad9-e91efdef8f5b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 105
        }
      ],
      "source": [
        "customers[customers['postal_code'] == '2c29ae653a9282cce4151bd87643c907644e09541abc28ae87dea0d1f6603b1c'].head(5)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "a4f8f7f1",
      "metadata": {
        "papermill": {
          "duration": 0.056306,
          "end_time": "2022-02-27T12:29:48.536034",
          "exception": false,
          "start_time": "2022-02-27T12:29:48.479728",
          "status": "completed"
        },
        "tags": [],
        "id": "a4f8f7f1"
      },
      "source": [
        "**Анализ вораста клиентов**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "95c1aee9",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:48.679527Z",
          "iopub.status.busy": "2022-02-27T12:29:48.678831Z",
          "iopub.status.idle": "2022-02-27T12:29:49.307670Z",
          "shell.execute_reply": "2022-02-27T12:29:49.308324Z",
          "shell.execute_reply.started": "2022-02-10T15:47:35.514746Z"
        },
        "papermill": {
          "duration": 0.715936,
          "end_time": "2022-02-27T12:29:49.308591",
          "exception": false,
          "start_time": "2022-02-27T12:29:48.592655",
          "status": "completed"
        },
        "tags": [],
        "id": "95c1aee9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 799
        },
        "outputId": "a7214bde-4f48-41a8-e2b2-ad67a85da761"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "Could not interpret value `age` for `x`. An entry with this name does not appear in `data`.",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-15-a40b53371e6a>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcustomers\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'age'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbins\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m50\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'orange'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_xlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Distribution of the customers age'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/distributions.py\u001b[0m in \u001b[0;36mhistplot\u001b[0;34m(data, x, y, hue, weights, stat, bins, binwidth, binrange, discrete, cumulative, common_bins, common_norm, multiple, element, fill, shrink, kde, kde_kws, line_kws, thresh, pthresh, pmax, cbar, cbar_ax, cbar_kws, palette, hue_order, hue_norm, color, log_scale, legend, ax, **kwargs)\u001b[0m\n\u001b[1;32m   1377\u001b[0m ):\n\u001b[1;32m   1378\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1379\u001b[0;31m     p = _DistributionPlotter(\n\u001b[0m\u001b[1;32m   1380\u001b[0m         \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1381\u001b[0m         \u001b[0mvariables\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhue\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweights\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/distributions.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, variables)\u001b[0m\n\u001b[1;32m    108\u001b[0m     ):\n\u001b[1;32m    109\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 110\u001b[0;31m         \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mvariables\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    111\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    112\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/_base.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, variables)\u001b[0m\n\u001b[1;32m    632\u001b[0m         \u001b[0;31m# information for numeric axes would be information about log scales.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    633\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_var_ordered\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"x\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"y\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m}\u001b[0m  \u001b[0;31m# alt., used DefaultDict\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 634\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0massign_variables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    635\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    636\u001b[0m         \u001b[0;31m# TODO Lots of tests assume that these are called to initialize the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/_base.py\u001b[0m in \u001b[0;36massign_variables\u001b[0;34m(self, data, variables)\u001b[0m\n\u001b[1;32m    677\u001b[0m             \u001b[0;31m# to centralize / standardize data consumption logic.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    678\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minput_format\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"long\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 679\u001b[0;31m             \u001b[0mplot_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mPlotData\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    680\u001b[0m             \u001b[0mframe\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplot_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mframe\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    681\u001b[0m             \u001b[0mnames\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplot_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnames\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/_core/data.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, variables)\u001b[0m\n\u001b[1;32m     56\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m         \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhandle_data_source\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 58\u001b[0;31m         \u001b[0mframe\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnames\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mids\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_assign_variables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     59\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     60\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mframe\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mframe\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/_core/data.py\u001b[0m in \u001b[0;36m_assign_variables\u001b[0;34m(self, data, variables)\u001b[0m\n\u001b[1;32m    230\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    231\u001b[0m                     \u001b[0merr\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"An entry with this name does not appear in `data`.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 232\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    233\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    234\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: Could not interpret value `age` for `x`. An entry with this name does not appear in `data`."
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import seaborn as sns\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "\n",
        "sns.set_style(\"darkgrid\")\n",
        "f, ax = plt.subplots(figsize=(10,5))\n",
        "\n",
        "ax = sns.histplot(data=customers, x='age', bins=50, color='orange')\n",
        "ax.set_xlabel('Distribution of the customers age')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "4727bd58",
      "metadata": {
        "papermill": {
          "duration": 0.067113,
          "end_time": "2022-02-27T12:29:49.446455",
          "exception": false,
          "start_time": "2022-02-27T12:29:49.379342",
          "status": "completed"
        },
        "tags": [],
        "id": "4727bd58"
      },
      "source": [
        "**Анализ статуса в клубе AGNI**\n",
        "\n",
        "Практически все клиенты имеют активный статус, некоторые из них только начинают его активировать и совсем маленькая доля людей, которые вышли из клуба."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "f9a41d81",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:49.592359Z",
          "iopub.status.busy": "2022-02-27T12:29:49.591488Z",
          "iopub.status.idle": "2022-02-27T12:29:51.718786Z",
          "shell.execute_reply": "2022-02-27T12:29:51.717589Z",
          "shell.execute_reply.started": "2022-02-10T15:48:10.530449Z"
        },
        "papermill": {
          "duration": 2.203591,
          "end_time": "2022-02-27T12:29:51.719218",
          "exception": false,
          "start_time": "2022-02-27T12:29:49.515627",
          "status": "completed"
        },
        "tags": [],
        "id": "f9a41d81",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 345
        },
        "outputId": "1bfe2533-6d37-400e-82f4-1ff61f07779e"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x360 with 1 Axes>"
            ],
            "image/png": "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2e12JSYmavz48Zo1a5buu+++Mu3HjBmjGTNmKCoqSpKUm5urRx99VFu2bNHu3bs9dZSWliosLExLly5VWFiYT44RyiOEwStbtmxRly5dlJ6erscee0ynTp3StGnT9Nxzz6lz586SpO3bt6tr164aNWqUpCvffn355Zc9/wCtX79ektS1a1fl5eXpxIkTat68uSRp586dat26tec2JjNmzCj3Dw/qjltuuUWbNm2SJE2fPl1vvPGGxo0bV2b9zJkztWbNGk2ePFmS9NOf/tSzrSIVjdsLFy5IkgYNGqS5c+fq7NmzGjBggOLi4jw3lB47dqzGjx9frs/S0lK9//77atasmfbs2aMePXp46vjhf4q5uble1Ynao6Jx07VrV/35z38ut/5qSKpojGRmZurll1/WqlWr5HQ6VVRUpI0bN950fd+vY+nSpVqzZo0ee+yxm+4PN4bpSFzXhQsXtHfvXj377LNKT0+XJK1Zs0aDBw/2/EcmSQMGDNCtt9563f4CAgI0cOBAT1+StHXrViUkJFR98ajxunbtqqNHj5Zb36lTp3JP4bgeb8dtaGioWrZsqZMnT163z927d6t169YaOXJkmTEN+EJqaqpmzJjh+YU1MDBQw4cP/9H9WpalCxcueM7uonoQwnBdGRkZ6tWrl1q1aqXQ0FAdOHBAX331ldq3b3/TfcbHx2vr1q2SpKKiImVmZqp///6e7SkpKUpOTlZycrKmT5/+o98DaqaSkhJlZWWpbdu2Zda73W59/PHHZe49eOzYMc+YSU5O1qefflquP2/H7bfffqvLly+rXbt2nnUvvfSSp+8xY8Z41qenpys+Pl6xsbH64IMPVFxcXGnf3tSJ2qOicfPpp5961q9cudLr/r766itFRkZWWX1X67jvvvu0c+dO3X///VXWN66P6UhcV3p6uh566CFJV6ZrquK3/aioKBUWFurrr7/W119/rY4dOyokJMSznenIuu3SpUtKTk6WdOVM2NX/GK6ud7lcuvPOO3Xvvfd6XlMV03xbt27VJ598om+++UZz5sxR/fr1PduuNa109ReIWbNmqWHDhurYsaM+/PBD9enTp8J9MB1Zt9zodGR1+P5N0b9fR2pqqlJSUjR//nwjddVFhDBUKj8/X7t27dKXX34pm80mt9stm82mwYMH6+DBg+rXr99N9331bNiRI0cUHx9fhVWjpvv+tV/XWn/x4kWNHz9ea9as8fyCcC3vvfee/vSnP0mSFixYoNatW1c6bq9eE7Z//36NHz9eMTExCg8Pr7D/Dz/8UAUFBUpKSpIkXbx4UfXr1680hAE/RuvWrXXgwAH17NnTq/ahoaE6d+6cZ/nf//53mV94v69v376aOnVqldQJ7zAdiUq98847Sk5O1t/+9jft2LFDmZmZatGihX7xi19o48aN+uyzzzxt3333XZ06dcrrvhMSEvT2229r165d6tu3ry/KRy0VFBSkJ598UqtXr1ZJSUmF7WJjY7Vp0yZt2rRJUVFRGj16tFfjNioqSklJSXrllVcqrSM9PV0LFizQjh07tGPHDmVkZGjnzp26ePHij3uDQAUmTZqkJUuWeK5XLCoq0ptvvllh++7du+vtt9/W1fuyb9iwQffcc8812+7du1c//elPq75oVIgzYajUli1b9Mgjj5RZ179/f6Wnp+u5557T4sWLdfr0aQUEBKhbt27q1auX133feeednlsENGjQoMy2lJSUMtdJvPnmmwoMDPxxbwa1ys9//nO1a9dOW7ZsUdeuXT3XWl01bNiwcmfJbr31Vq/H7SOPPKKhQ4dq0qRJkq5c2/P22297ti9dulR///vfNW/ePM+6Bg0aqEuXLvrb3/6mQYMGXbNub+pEzXPx4kVFR0d7lseNGyep/Lh54YUXftR+evfurVOnTmncuHGyLEs2m03Dhg3zbH/qqae0cOFCSVKzZs306quv6uuvv1ZSUpJsNpsiIyPLXGd79Zowy7IUHBysBQsW/Kj6cGN4bBEAAIABTEcCAAAYQAgDAAAwgBAGAABgACEMAADAAEIYAACAAYQwoIa56667lJycrPj4eCUlJekvf/mLSktLJUn79++v9Cvmubm52rx5c4XbXS6X5+G969evv+E7Z69fv77M8xx///vf6/DhwzfUx40oKirS2LFjlZyc7HkMVmVyc3O9ekbp958tadLu3bs9t8jwlS+++EKZmZlV1g6A97hPGFDDfP9u8qdPn9b06dN1/vx5PfbYY4qKilJUVFSFrz1x4oS2bNmixMTEcttKSkrkdDq1fPnym65tw4YNatOmjefhws8+++xN9+WNzz//XJJ4DFAF3G637HZ7pW2++OILHThwQL17966SdgC8x5kwoAYLCwvTM888ozVr1siyrDJnTvbs2eN5QPDg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\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "sns.set_style(\"darkgrid\")\n",
        "f, ax = plt.subplots(figsize=(10,5))\n",
        "ax = sns.histplot(data=customers, x='club_member_status', color='orange')\n",
        "ax.set_xlabel('Distribution of club member status')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Анализ частоты отправки новостей**"
      ],
      "metadata": {
        "id": "g83szYhcmDOk"
      },
      "id": "g83szYhcmDOk"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4016e94e",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:52.243850Z",
          "iopub.status.busy": "2022-02-27T12:29:52.082948Z",
          "iopub.status.idle": "2022-02-27T12:29:52.246249Z",
          "shell.execute_reply": "2022-02-27T12:29:52.246798Z",
          "shell.execute_reply.started": "2022-02-10T16:01:56.635645Z"
        },
        "papermill": {
          "duration": 0.257619,
          "end_time": "2022-02-27T12:29:52.246994",
          "exception": false,
          "start_time": "2022-02-27T12:29:51.989375",
          "status": "completed"
        },
        "tags": [],
        "id": "4016e94e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "046b5827-a472-45c0-e21b-bc588589905f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['NONE', 'Regularly', nan, 'Monthly', 'None'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 108
        }
      ],
      "source": [
        "customers['fashion_news_frequency'].unique()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "customers.loc[~customers['fashion_news_frequency'].isin(['Regularly', 'Monthly'])]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "r0MQ7o0PQvjI",
        "outputId": "63055196-1311-41eb-b27c-da4cd2573adf"
      },
      "id": "r0MQ7o0PQvjI",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                               customer_id  Active  \\\n",
              "0        00000dbacae5abe5e23885899a1fa44253a17956c6d1c3...     NaN   \n",
              "1        0000423b00ade91418cceaf3b26c6af3dd342b51fd051e...     NaN   \n",
              "2        000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...     NaN   \n",
              "3        00005ca1c9ed5f5146b52ac8639a40ca9d57aeff4d1bd2...     NaN   \n",
              "5        000064249685c11552da43ef22a5030f35a147f723d5b0...     NaN   \n",
              "...                                                    ...     ...   \n",
              "1371968  ffff4c4e8b57b633c1ddf8fbd53db16b962cf831baf9ed...     NaN   \n",
              "1371972  ffff8f9ecdce722b5bab97fff68a6d1866492209bfe524...     NaN   \n",
              "1371975  ffffbbf78b6eaac697a8a5dfbfd2bfa8113ee5b403e474...     NaN   \n",
              "1371976  ffffcd5046a6143d29a04fb8c424ce494a76e5cdf4fab5...     NaN   \n",
              "1371979  ffffd9ac14e89946416d80e791d064701994755c3ab686...     NaN   \n",
              "\n",
              "        club_member_status fashion_news_frequency     age  \\\n",
              "0                   ACTIVE                   NONE 49.0000   \n",
              "1                   ACTIVE                   NONE 25.0000   \n",
              "2                   ACTIVE                   NONE 24.0000   \n",
              "3                   ACTIVE                   NONE 54.0000   \n",
              "5                      NaN                    NaN     NaN   \n",
              "...                    ...                    ...     ...   \n",
              "1371968             ACTIVE                   NONE 40.0000   \n",
              "1371972             ACTIVE                   NONE 52.0000   \n",
              "1371975             ACTIVE                   NONE 24.0000   \n",
              "1371976             ACTIVE                   NONE 21.0000   \n",
              "1371979         PRE-CREATE                   NONE 65.0000   \n",
              "\n",
              "                                               postal_code  \n",
              "0        52043ee2162cf5aa7ee79974281641c6f11a68d276429a...  \n",
              "1        2973abc54daa8a5f8ccfe9362140c63247c5eee03f1d93...  \n",
              "2        64f17e6a330a85798e4998f62d0930d14db8db1c054af6...  \n",
              "3        5d36574f52495e81f019b680c843c443bd343d5ca5b1c2...  \n",
              "5        2c29ae653a9282cce4151bd87643c907644e09541abc28...  \n",
              "...                                                    ...  \n",
              "1371968  3b4a300713f8b142836a67caa5b6d5b3f10a7650c06820...  \n",
              "1371972  0de9d1ec7dc785301ca5fbe8949cfc2cfbd77e7a807270...  \n",
              "1371975  7aa399f7e669990daba2d92c577b52237380662f36480b...  \n",
              "1371976  3f47f1279beb72215f4de557d950e0bfa73789d24acb5e...  \n",
              "1371979  0a1a03306fb2f62164c2a439b38c0caa64b40deaae8687...  \n",
              "\n",
              "[893722 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-659c3382-ca50-43b8-b23e-4fa392245b4b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>Active</th>\n",
              "      <th>club_member_status</th>\n",
              "      <th>fashion_news_frequency</th>\n",
              "      <th>age</th>\n",
              "      <th>postal_code</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>00000dbacae5abe5e23885899a1fa44253a17956c6d1c3...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>49.0000</td>\n",
              "      <td>52043ee2162cf5aa7ee79974281641c6f11a68d276429a...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0000423b00ade91418cceaf3b26c6af3dd342b51fd051e...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>25.0000</td>\n",
              "      <td>2973abc54daa8a5f8ccfe9362140c63247c5eee03f1d93...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>24.0000</td>\n",
              "      <td>64f17e6a330a85798e4998f62d0930d14db8db1c054af6...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>00005ca1c9ed5f5146b52ac8639a40ca9d57aeff4d1bd2...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>54.0000</td>\n",
              "      <td>5d36574f52495e81f019b680c843c443bd343d5ca5b1c2...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>000064249685c11552da43ef22a5030f35a147f723d5b0...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2c29ae653a9282cce4151bd87643c907644e09541abc28...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1371968</th>\n",
              "      <td>ffff4c4e8b57b633c1ddf8fbd53db16b962cf831baf9ed...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>40.0000</td>\n",
              "      <td>3b4a300713f8b142836a67caa5b6d5b3f10a7650c06820...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1371972</th>\n",
              "      <td>ffff8f9ecdce722b5bab97fff68a6d1866492209bfe524...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>52.0000</td>\n",
              "      <td>0de9d1ec7dc785301ca5fbe8949cfc2cfbd77e7a807270...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1371975</th>\n",
              "      <td>ffffbbf78b6eaac697a8a5dfbfd2bfa8113ee5b403e474...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>24.0000</td>\n",
              "      <td>7aa399f7e669990daba2d92c577b52237380662f36480b...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1371976</th>\n",
              "      <td>ffffcd5046a6143d29a04fb8c424ce494a76e5cdf4fab5...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>21.0000</td>\n",
              "      <td>3f47f1279beb72215f4de557d950e0bfa73789d24acb5e...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1371979</th>\n",
              "      <td>ffffd9ac14e89946416d80e791d064701994755c3ab686...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PRE-CREATE</td>\n",
              "      <td>NONE</td>\n",
              "      <td>65.0000</td>\n",
              "      <td>0a1a03306fb2f62164c2a439b38c0caa64b40deaae8687...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>893722 rows × 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-659c3382-ca50-43b8-b23e-4fa392245b4b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-659c3382-ca50-43b8-b23e-4fa392245b4b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-659c3382-ca50-43b8-b23e-4fa392245b4b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 109
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "799051f5",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:52.368243Z",
          "iopub.status.busy": "2022-02-27T12:29:52.367556Z",
          "iopub.status.idle": "2022-02-27T12:29:52.601710Z",
          "shell.execute_reply": "2022-02-27T12:29:52.601056Z",
          "shell.execute_reply.started": "2022-02-10T16:06:25.326807Z"
        },
        "papermill": {
          "duration": 0.295433,
          "end_time": "2022-02-27T12:29:52.601856",
          "exception": false,
          "start_time": "2022-02-27T12:29:52.306423",
          "status": "completed"
        },
        "tags": [],
        "id": "799051f5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7ddaf12f-cc9d-4642-b701-5eda49741b90"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['None', 'Regularly', 'Monthly'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ],
      "source": [
        "customers.loc[~customers['fashion_news_frequency'].isin(['Regularly', 'Monthly']), 'fashion_news_frequency'] = 'None'\n",
        "customers['fashion_news_frequency'].unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c078b929",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:52.727627Z",
          "iopub.status.busy": "2022-02-27T12:29:52.726894Z",
          "iopub.status.idle": "2022-02-27T12:29:53.176244Z",
          "shell.execute_reply": "2022-02-27T12:29:53.175620Z",
          "shell.execute_reply.started": "2022-02-10T16:06:30.794244Z"
        },
        "papermill": {
          "duration": 0.51573,
          "end_time": "2022-02-27T12:29:53.176474",
          "exception": false,
          "start_time": "2022-02-27T12:29:52.660744",
          "status": "completed"
        },
        "tags": [],
        "id": "c078b929",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "outputId": "f805ebc0-f815-43de-bb11-a76d275dc722"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        customer_id\n",
              "fashion_news_frequency             \n",
              "Monthly                         842\n",
              "None                         893722\n",
              "Regularly                    477416"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b56118ae-1013-4c22-8de9-2e97449da476\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fashion_news_frequency</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Monthly</th>\n",
              "      <td>842</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>None</th>\n",
              "      <td>893722</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Regularly</th>\n",
              "      <td>477416</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b56118ae-1013-4c22-8de9-2e97449da476')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b56118ae-1013-4c22-8de9-2e97449da476 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b56118ae-1013-4c22-8de9-2e97449da476');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 111
        }
      ],
      "source": [
        "pie_data = customers[['customer_id', 'fashion_news_frequency']].groupby('fashion_news_frequency').count()\n",
        "pie_data"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "2a08e19f",
      "metadata": {
        "papermill": {
          "duration": 0.059292,
          "end_time": "2022-02-27T12:29:53.297328",
          "exception": false,
          "start_time": "2022-02-27T12:29:53.238036",
          "status": "completed"
        },
        "tags": [],
        "id": "2a08e19f"
      },
      "source": [
        "Клиенты предпочитают не получать никаких новостей."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d7c787bb",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:53.424486Z",
          "iopub.status.busy": "2022-02-27T12:29:53.423689Z",
          "iopub.status.idle": "2022-02-27T12:29:53.548783Z",
          "shell.execute_reply": "2022-02-27T12:29:53.549686Z",
          "shell.execute_reply.started": "2022-02-10T16:06:33.012743Z"
        },
        "papermill": {
          "duration": 0.192631,
          "end_time": "2022-02-27T12:29:53.550025",
          "exception": false,
          "start_time": "2022-02-27T12:29:53.357394",
          "status": "completed"
        },
        "tags": [],
        "id": "d7c787bb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 629
        },
        "outputId": "92e0474d-a6bb-4d1a-dcb8-5c032877cc17"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'pie_data' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-44-9748cd1b3794>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mcolors\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolor_palette\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'pastel'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpie\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpie_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcustomer_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpie_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolors\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_facecolor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'lightgrey'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_xlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Distribution of fashion news frequency'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'pie_data' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "sns.set_style(\"darkgrid\")\n",
        "f, ax = plt.subplots(figsize=(10,5))\n",
        "\n",
        "colors = sns.color_palette('pastel')\n",
        "ax.pie(pie_data.customer_id, labels=pie_data.index, colors = colors)\n",
        "ax.set_facecolor('lightgrey')\n",
        "ax.set_xlabel('Distribution of fashion news frequency')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ede00e3b",
      "metadata": {
        "papermill": {
          "duration": 0.059846,
          "end_time": "2022-02-27T12:29:53.705357",
          "exception": false,
          "start_time": "2022-02-27T12:29:53.645511",
          "status": "completed"
        },
        "tags": [],
        "id": "ede00e3b"
      },
      "source": [
        "## Transactions"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "9137b75e",
      "metadata": {
        "papermill": {
          "duration": 0.060599,
          "end_time": "2022-02-27T12:29:53.946752",
          "exception": false,
          "start_time": "2022-02-27T12:29:53.886153",
          "status": "completed"
        },
        "tags": [],
        "id": "9137b75e"
      },
      "source": [
        "> `t_dat` : Время покупки    \n",
        "> `customer_id` : Уникальный идентификатор клиента    \n",
        "> `article_id` : Уникальный идентификатор артикула  \n",
        "> `price` : Стоимость покупок    \n",
        "> `sales_channel_id` : Канал продажи"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "55c71eb9",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:54.070774Z",
          "iopub.status.busy": "2022-02-27T12:29:54.069956Z",
          "iopub.status.idle": "2022-02-27T12:29:54.080588Z",
          "shell.execute_reply": "2022-02-27T12:29:54.081169Z",
          "shell.execute_reply.started": "2022-02-10T16:31:36.941688Z"
        },
        "papermill": {
          "duration": 0.074505,
          "end_time": "2022-02-27T12:29:54.081365",
          "exception": false,
          "start_time": "2022-02-27T12:29:54.006860",
          "status": "completed"
        },
        "tags": [],
        "id": "55c71eb9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        },
        "outputId": "bd1989d8-1ace-4a12-b614-7bcdb93b7790"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [<!DOCTYPE html><html><head><title>Google Drive - Virus scan warning</title><meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"/><style nonce=\"P_f1HL9tHsaNIngFBPj3oA\">.goog-link-button{position:relative;color:#15c;text-decoration:underline;cursor:pointer}.goog-link-button-disabled{color:#ccc;text-decoration:none;cursor:default}body{color:#222;font:normal 13px/1.4 arial, sans-serif;margin:0}.grecaptcha-badge{visibility:hidden}.uc-main{padding-top:50px;text-align:center}#uc-dl-icon{display:inline-block;margin-top:16px;padding-right:1em;vertical-align:top}#uc-text{display:inline-block;max-width:68ex;text-align:left}.uc-error-caption, .uc-warning-caption{color:#222;font-size:16px}#uc-download-link{text-decoration:none}.uc-name-size a{color:#15c;text-decoration:none}.uc-name-size a:visited{color:#61c;text-decoration:none}.uc-name-size a:active{color:#d14836;text-decoration:none}.uc-footer{color:#777;font-size:11px;padding-bottom:5ex;padding-top:5ex;text-align:center}.uc-footer a{color:#15c}.uc-footer a:visited{color:#61c}.uc-footer a:active{color:#d14836}.uc-footer-divider{color:#ccc;width:100%}.goog-inline-block{position:relative;display:-moz-inline-box;display:inline-block}* html .goog-inline-block{display:inline}*:first-child+html .goog-inline-block{display:inline}sentinel{}</style><link rel=\"icon\" href=\"//ssl.gstatic.com/docs/doclist/images/drive_2022q3_32dp.png\"/></head><body><div class=\"uc-main\"><div id=\"uc-dl-icon\" class=\"image-container\"><div class=\"drive-sprite-aux-download-file\"></div></div><div id=\"uc-text\"><p class=\"uc-warning-caption\">Google Drive can't scan this file for viruses.</p><p class=\"uc-warning-subcaption\"><span class=\"uc-name-size\"><a href=\"/open?id=1jz2hHg7iwxSAnAisnlQyiPwV2a8ZG_sB\">transactions_train.csv</a> (3.2G)</span> is too large for Google to scan for viruses. Would you still like to download this file?</p><form id=\"download-form\" action=\"https://drive.usercontent.google.com/download\" method=\"get\"><input type=\"submit\" id=\"uc-download-link\" class=\"goog-inline-block jfk-button jfk-button-action\" value=\"Download anyway\"/><input type=\"hidden\" name=\"id\" value=\"1jz2hHg7iwxSAnAisnlQyiPwV2a8ZG_sB\"><input type=\"hidden\" name=\"export\" value=\"download\"><input type=\"hidden\" name=\"confirm\" value=\"t\"><input type=\"hidden\" name=\"uuid\" value=\"ea9bbf92-03ea-4e29-97b4-2804c3a854dc\"></form></div></div><div class=\"uc-footer\"><hr class=\"uc-footer-divider\"></div></body></html>]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7752a8c7-6baf-4814-a3d5-f9bb09d4bbde\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Google Drive - Virus scan warning&lt;/title&gt;&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"/&gt;&lt;style nonce=\"P_f1HL9tHsaNIngFBPj3oA\"&gt;.goog-link-button{position:relative;color:#15c;text-decoration:underline;cursor:pointer}.goog-link-button-disabled{color:#ccc;text-decoration:none;cursor:default}body{color:#222;font:normal 13px/1.4 arial</th>\n",
              "      <th>sans-serif;margin:0}.grecaptcha-badge{visibility:hidden}.uc-main{padding-top:50px;text-align:center}#uc-dl-icon{display:inline-block;margin-top:16px;padding-right:1em;vertical-align:top}#uc-text{display:inline-block;max-width:68ex;text-align:left}.uc-error-caption</th>\n",
              "      <th>.uc-warning-caption{color:#222;font-size:16px}#uc-download-link{text-decoration:none}.uc-name-size a{color:#15c;text-decoration:none}.uc-name-size a:visited{color:#61c;text-decoration:none}.uc-name-size a:active{color:#d14836;text-decoration:none}.uc-footer{color:#777;font-size:11px;padding-bottom:5ex;padding-top:5ex;text-align:center}.uc-footer a{color:#15c}.uc-footer a:visited{color:#61c}.uc-footer a:active{color:#d14836}.uc-footer-divider{color:#ccc;width:100%}.goog-inline-block{position:relative;display:-moz-inline-box;display:inline-block}* html .goog-inline-block{display:inline}*:first-child+html .goog-inline-block{display:inline}sentinel{}&lt;/style&gt;&lt;link rel=\"icon\" href=\"//ssl.gstatic.com/docs/doclist/images/drive_2022q3_32dp.png\"/&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"uc-main\"&gt;&lt;div id=\"uc-dl-icon\" class=\"image-container\"&gt;&lt;div class=\"drive-sprite-aux-download-file\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=\"uc-text\"&gt;&lt;p class=\"uc-warning-caption\"&gt;Google Drive can't scan this file for viruses.&lt;/p&gt;&lt;p class=\"uc-warning-subcaption\"&gt;&lt;span class=\"uc-name-size\"&gt;&lt;a href=\"/open?id=1jz2hHg7iwxSAnAisnlQyiPwV2a8ZG_sB\"&gt;transactions_train.csv&lt;/a&gt; (3.2G)&lt;/span&gt; is too large for Google to scan for viruses. Would you still like to download this file?&lt;/p&gt;&lt;form id=\"download-form\" action=\"https://drive.usercontent.google.com/download\" method=\"get\"&gt;&lt;input type=\"submit\" id=\"uc-download-link\" class=\"goog-inline-block jfk-button jfk-button-action\" value=\"Download anyway\"/&gt;&lt;input type=\"hidden\" name=\"id\" value=\"1jz2hHg7iwxSAnAisnlQyiPwV2a8ZG_sB\"&gt;&lt;input type=\"hidden\" name=\"export\" value=\"download\"&gt;&lt;input type=\"hidden\" name=\"confirm\" value=\"t\"&gt;&lt;input type=\"hidden\" name=\"uuid\" value=\"ea9bbf92-03ea-4e29-97b4-2804c3a854dc\"&gt;&lt;/form&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\"uc-footer\"&gt;&lt;hr class=\"uc-footer-divider\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7752a8c7-6baf-4814-a3d5-f9bb09d4bbde')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7752a8c7-6baf-4814-a3d5-f9bb09d4bbde button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7752a8c7-6baf-4814-a3d5-f9bb09d4bbde');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ],
      "source": [
        "transactions.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6b63ff24",
      "metadata": {
        "papermill": {
          "duration": 0.061469,
          "end_time": "2022-02-27T12:29:54.204186",
          "exception": false,
          "start_time": "2022-02-27T12:29:54.142717",
          "status": "completed"
        },
        "tags": [],
        "id": "6b63ff24"
      },
      "source": [
        "\n",
        "\n",
        "```\n",
        "# This is formatted as code\n",
        "```\n",
        "\n",
        "**Поиск выбросов в стоимости покупок**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1ad1c31a",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:54.330238Z",
          "iopub.status.busy": "2022-02-27T12:29:54.329565Z",
          "iopub.status.idle": "2022-02-27T12:29:57.875908Z",
          "shell.execute_reply": "2022-02-27T12:29:57.875238Z",
          "shell.execute_reply.started": "2022-02-10T16:31:36.964989Z"
        },
        "papermill": {
          "duration": 3.610122,
          "end_time": "2022-02-27T12:29:57.876077",
          "exception": false,
          "start_time": "2022-02-27T12:29:54.265955",
          "status": "completed"
        },
        "tags": [],
        "id": "1ad1c31a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 596
        },
        "outputId": "f7506e3b-6e0d-45b2-ca71-affc9d7a53bd"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "'price'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3801\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3802\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'price'",
            "\nThe above exception was the direct cause of the following exception:\n",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-48-3a431b1039cb>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_option\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'display.float_format'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'{:.4f}'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mtransactions\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdescribe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'price'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3805\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3807\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3808\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3809\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3802\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3804\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3805\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'price'"
          ]
        }
      ],
      "source": [
        "pd.set_option('display.float_format', '{:.4f}'.format)\n",
        "transactions.describe()['price']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4147d0b1",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:29:58.144491Z",
          "iopub.status.busy": "2022-02-27T12:29:58.143690Z",
          "iopub.status.idle": "2022-02-27T12:30:02.908185Z",
          "shell.execute_reply": "2022-02-27T12:30:02.907603Z",
          "shell.execute_reply.started": "2022-02-14T13:44:32.406548Z"
        },
        "papermill": {
          "duration": 4.829723,
          "end_time": "2022-02-27T12:30:02.908348",
          "exception": false,
          "start_time": "2022-02-27T12:29:58.078625",
          "status": "completed"
        },
        "tags": [],
        "id": "4147d0b1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 814
        },
        "outputId": "49e5cf8d-6a66-44a1-9895-8f721413f555"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "Could not interpret value `price` for `x`. An entry with this name does not appear in `data`.",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-41-cfaed6fbeb9f>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_style\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"darkgrid\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mboxplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtransactions\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'price'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'orange'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_xlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Price outliers'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/categorical.py\u001b[0m in \u001b[0;36mboxplot\u001b[0;34m(data, x, y, hue, order, hue_order, orient, color, palette, saturation, fill, dodge, width, gap, whis, linecolor, linewidth, fliersize, hue_norm, native_scale, log_scale, formatter, legend, ax, **kwargs)\u001b[0m\n\u001b[1;32m   1594\u001b[0m ):\n\u001b[1;32m   1595\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1596\u001b[0;31m     p = _CategoricalPlotter(\n\u001b[0m\u001b[1;32m   1597\u001b[0m         \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1598\u001b[0m         \u001b[0mvariables\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhue\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/categorical.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, variables, order, orient, require_numeric, color, legend)\u001b[0m\n\u001b[1;32m     64\u001b[0m     ):\n\u001b[1;32m     65\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 66\u001b[0;31m         \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mvariables\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     67\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     68\u001b[0m         \u001b[0;31m# This method takes care of some bookkeeping that is necessary because the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/_base.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, variables)\u001b[0m\n\u001b[1;32m    632\u001b[0m         \u001b[0;31m# information for numeric axes would be information about log scales.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    633\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_var_ordered\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"x\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"y\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m}\u001b[0m  \u001b[0;31m# alt., used DefaultDict\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 634\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0massign_variables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    635\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    636\u001b[0m         \u001b[0;31m# TODO Lots of tests assume that these are called to initialize the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/_base.py\u001b[0m in \u001b[0;36massign_variables\u001b[0;34m(self, data, variables)\u001b[0m\n\u001b[1;32m    677\u001b[0m             \u001b[0;31m# to centralize / standardize data consumption logic.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    678\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minput_format\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"long\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 679\u001b[0;31m             \u001b[0mplot_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mPlotData\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    680\u001b[0m             \u001b[0mframe\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplot_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mframe\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    681\u001b[0m             \u001b[0mnames\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplot_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnames\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/_core/data.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, variables)\u001b[0m\n\u001b[1;32m     56\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m         \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhandle_data_source\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 58\u001b[0;31m         \u001b[0mframe\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnames\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mids\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_assign_variables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     59\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     60\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mframe\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mframe\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/_core/data.py\u001b[0m in \u001b[0;36m_assign_variables\u001b[0;34m(self, data, variables)\u001b[0m\n\u001b[1;32m    230\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    231\u001b[0m                     \u001b[0merr\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"An entry with this name does not appear in `data`.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 232\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    233\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    234\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: Could not interpret value `price` for `x`. An entry with this name does not appear in `data`."
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "sns.set_style(\"darkgrid\")\n",
        "f, ax = plt.subplots(figsize=(10,5))\n",
        "ax = sns.boxplot(data=transactions, x='price', color='orange')\n",
        "ax.set_xlabel('Price outliers')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "0a48faaf",
      "metadata": {
        "papermill": {
          "duration": 0.062005,
          "end_time": "2022-02-27T12:30:21.780908",
          "exception": false,
          "start_time": "2022-02-27T12:30:21.718903",
          "status": "completed"
        },
        "tags": [],
        "id": "0a48faaf"
      },
      "source": [
        "Но кстати, анализировать стоимости внутри групп - это более правильно, т.к. цены аксессуаров и брюк могут отличаться."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "75ae6a42",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:30:22.038500Z",
          "iopub.status.busy": "2022-02-27T12:30:22.037800Z",
          "iopub.status.idle": "2022-02-27T12:30:22.050548Z",
          "shell.execute_reply": "2022-02-27T12:30:22.051091Z",
          "shell.execute_reply.started": "2022-02-14T13:48:01.150221Z"
        },
        "papermill": {
          "duration": 0.079557,
          "end_time": "2022-02-27T12:30:22.051302",
          "exception": false,
          "start_time": "2022-02-27T12:30:21.971745",
          "status": "completed"
        },
        "tags": [],
        "id": "75ae6a42",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "86d604db-99f1-48e2-b6c9-458b8e1abbe5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   article_id          prod_name product_type_name  product_group_name  \\\n",
              "0   108775015          Strap top          Vest top  Garment Upper body   \n",
              "1   108775044          Strap top          Vest top  Garment Upper body   \n",
              "2   108775051      Strap top (1)          Vest top  Garment Upper body   \n",
              "3   110065001  OP T-shirt (Idro)               Bra           Underwear   \n",
              "4   110065002  OP T-shirt (Idro)               Bra           Underwear   \n",
              "\n",
              "         index_name  \n",
              "0        Ladieswear  \n",
              "1        Ladieswear  \n",
              "2        Ladieswear  \n",
              "3  Lingeries/Tights  \n",
              "4  Lingeries/Tights  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-84a1fd45-ab0e-433e-8b05-ce8fe9ae22fa\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>article_id</th>\n",
              "      <th>prod_name</th>\n",
              "      <th>product_type_name</th>\n",
              "      <th>product_group_name</th>\n",
              "      <th>index_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>108775015</td>\n",
              "      <td>Strap top</td>\n",
              "      <td>Vest top</td>\n",
              "      <td>Garment Upper body</td>\n",
              "      <td>Ladieswear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>108775044</td>\n",
              "      <td>Strap top</td>\n",
              "      <td>Vest top</td>\n",
              "      <td>Garment Upper body</td>\n",
              "      <td>Ladieswear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>108775051</td>\n",
              "      <td>Strap top (1)</td>\n",
              "      <td>Vest top</td>\n",
              "      <td>Garment Upper body</td>\n",
              "      <td>Ladieswear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>110065001</td>\n",
              "      <td>OP T-shirt (Idro)</td>\n",
              "      <td>Bra</td>\n",
              "      <td>Underwear</td>\n",
              "      <td>Lingeries/Tights</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>110065002</td>\n",
              "      <td>OP T-shirt (Idro)</td>\n",
              "      <td>Bra</td>\n",
              "      <td>Underwear</td>\n",
              "      <td>Lingeries/Tights</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84a1fd45-ab0e-433e-8b05-ce8fe9ae22fa')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-84a1fd45-ab0e-433e-8b05-ce8fe9ae22fa button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-84a1fd45-ab0e-433e-8b05-ce8fe9ae22fa');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "articles_for_merge = articles[['article_id', 'prod_name', 'product_type_name', 'product_group_name', 'index_name']]\n",
        "articles_for_merge.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c4cc18b1",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:30:22.183805Z",
          "iopub.status.busy": "2022-02-27T12:30:22.180741Z",
          "iopub.status.idle": "2022-02-27T12:30:33.097188Z",
          "shell.execute_reply": "2022-02-27T12:30:33.098317Z",
          "shell.execute_reply.started": "2022-02-14T13:48:04.493834Z"
        },
        "papermill": {
          "duration": 10.984066,
          "end_time": "2022-02-27T12:30:33.098623",
          "exception": false,
          "start_time": "2022-02-27T12:30:22.114557",
          "status": "completed"
        },
        "tags": [],
        "id": "c4cc18b1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "7937ca6e-2d76-4560-daad-95495e9c81b7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                customer_id  article_id  \\\n",
              "0         000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...   663713001   \n",
              "1         000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...   541518023   \n",
              "2         00007d2de826758b65a93dd24ce629ed66842531df6699...   505221004   \n",
              "3         00007d2de826758b65a93dd24ce629ed66842531df6699...   685687003   \n",
              "4         00007d2de826758b65a93dd24ce629ed66842531df6699...   685687004   \n",
              "...                                                     ...         ...   \n",
              "31788319  fff2282977442e327b45d8c89afde25617d00124d0f999...   929511001   \n",
              "31788320  fff2282977442e327b45d8c89afde25617d00124d0f999...   891322004   \n",
              "31788321  fff380805474b287b05cb2a7507b9a013482f7dd0bce0e...   918325001   \n",
              "31788322  fff4d3a8b1f3b60af93e78c30a7cb4cf75edaf2590d3e5...   833459002   \n",
              "31788323  fffef3b6b73545df065b521e19f64bf6fe93bfd450ab20...   898573003   \n",
              "\n",
              "          price       t_dat                 prod_name product_type_name  \\\n",
              "0        0.0508  2018-09-20  Atlanta Push Body Harlow    Underwear body   \n",
              "1        0.0305  2018-09-20   Rae Push (Melbourne) 2p               Bra   \n",
              "2        0.0152  2018-09-20               Inca Jumper           Sweater   \n",
              "3        0.0169  2018-09-20      W YODA KNIT OL OFFER           Sweater   \n",
              "4        0.0169  2018-09-20      W YODA KNIT OL OFFER           Sweater   \n",
              "...         ...         ...                       ...               ...   \n",
              "31788319 0.0593  2020-09-22      POPPY PU SHIRT DRESS             Dress   \n",
              "31788320 0.0424  2020-09-22        FENNEL SHIRT DRESS           Unknown   \n",
              "31788321 0.0432  2020-09-22            Winter shopper               Bag   \n",
              "31788322 0.0068  2020-09-22  Class Aligator Ring Pack              Ring   \n",
              "31788323 0.0339  2020-09-22                    Venice            Blouse   \n",
              "\n",
              "          product_group_name          index_name  \n",
              "0                  Underwear    Lingeries/Tights  \n",
              "1                  Underwear    Lingeries/Tights  \n",
              "2         Garment Upper body             Divided  \n",
              "3         Garment Upper body          Ladieswear  \n",
              "4         Garment Upper body          Ladieswear  \n",
              "...                      ...                 ...  \n",
              "31788319   Garment Full body             Divided  \n",
              "31788320             Unknown             Divided  \n",
              "31788321         Accessories  Ladies Accessories  \n",
              "31788322         Accessories  Ladies Accessories  \n",
              "31788323  Garment Upper body          Ladieswear  \n",
              "\n",
              "[31788324 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d664fa12-6e94-4a96-8c15-c49cc2ce800b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>article_id</th>\n",
              "      <th>price</th>\n",
              "      <th>t_dat</th>\n",
              "      <th>prod_name</th>\n",
              "      <th>product_type_name</th>\n",
              "      <th>product_group_name</th>\n",
              "      <th>index_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...</td>\n",
              "      <td>663713001</td>\n",
              "      <td>0.0508</td>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>Atlanta Push Body Harlow</td>\n",
              "      <td>Underwear body</td>\n",
              "      <td>Underwear</td>\n",
              "      <td>Lingeries/Tights</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...</td>\n",
              "      <td>541518023</td>\n",
              "      <td>0.0305</td>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>Rae Push (Melbourne) 2p</td>\n",
              "      <td>Bra</td>\n",
              "      <td>Underwear</td>\n",
              "      <td>Lingeries/Tights</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "      <td>505221004</td>\n",
              "      <td>0.0152</td>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>Inca Jumper</td>\n",
              "      <td>Sweater</td>\n",
              "      <td>Garment Upper body</td>\n",
              "      <td>Divided</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "      <td>685687003</td>\n",
              "      <td>0.0169</td>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>W YODA KNIT OL OFFER</td>\n",
              "      <td>Sweater</td>\n",
              "      <td>Garment Upper body</td>\n",
              "      <td>Ladieswear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "      <td>685687004</td>\n",
              "      <td>0.0169</td>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>W YODA KNIT OL OFFER</td>\n",
              "      <td>Sweater</td>\n",
              "      <td>Garment Upper body</td>\n",
              "      <td>Ladieswear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31788319</th>\n",
              "      <td>fff2282977442e327b45d8c89afde25617d00124d0f999...</td>\n",
              "      <td>929511001</td>\n",
              "      <td>0.0593</td>\n",
              "      <td>2020-09-22</td>\n",
              "      <td>POPPY PU SHIRT DRESS</td>\n",
              "      <td>Dress</td>\n",
              "      <td>Garment Full body</td>\n",
              "      <td>Divided</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31788320</th>\n",
              "      <td>fff2282977442e327b45d8c89afde25617d00124d0f999...</td>\n",
              "      <td>891322004</td>\n",
              "      <td>0.0424</td>\n",
              "      <td>2020-09-22</td>\n",
              "      <td>FENNEL SHIRT DRESS</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>Divided</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31788321</th>\n",
              "      <td>fff380805474b287b05cb2a7507b9a013482f7dd0bce0e...</td>\n",
              "      <td>918325001</td>\n",
              "      <td>0.0432</td>\n",
              "      <td>2020-09-22</td>\n",
              "      <td>Winter shopper</td>\n",
              "      <td>Bag</td>\n",
              "      <td>Accessories</td>\n",
              "      <td>Ladies Accessories</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31788322</th>\n",
              "      <td>fff4d3a8b1f3b60af93e78c30a7cb4cf75edaf2590d3e5...</td>\n",
              "      <td>833459002</td>\n",
              "      <td>0.0068</td>\n",
              "      <td>2020-09-22</td>\n",
              "      <td>Class Aligator Ring Pack</td>\n",
              "      <td>Ring</td>\n",
              "      <td>Accessories</td>\n",
              "      <td>Ladies Accessories</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31788323</th>\n",
              "      <td>fffef3b6b73545df065b521e19f64bf6fe93bfd450ab20...</td>\n",
              "      <td>898573003</td>\n",
              "      <td>0.0339</td>\n",
              "      <td>2020-09-22</td>\n",
              "      <td>Venice</td>\n",
              "      <td>Blouse</td>\n",
              "      <td>Garment Upper body</td>\n",
              "      <td>Ladieswear</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>31788324 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d664fa12-6e94-4a96-8c15-c49cc2ce800b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d664fa12-6e94-4a96-8c15-c49cc2ce800b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d664fa12-6e94-4a96-8c15-c49cc2ce800b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ],
      "source": [
        "articles_for_merge = transactions[['customer_id', 'article_id', 'price', 't_dat']].merge(articles_for_merge, on='article_id', how='left')\n",
        "articles_for_merge"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b0a2855c",
      "metadata": {
        "papermill": {
          "duration": 0.061816,
          "end_time": "2022-02-27T12:30:33.226966",
          "exception": false,
          "start_time": "2022-02-27T12:30:33.165150",
          "status": "completed"
        },
        "tags": [],
        "id": "b0a2855c"
      },
      "source": [
        "Здесь мы видим выбросы для стоимостей по группам, особенно в Lower/Upper/Full body.\n",
        "\n",
        "Да даже в аксессуарах есть очень большая стоимость."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d56b876c",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:30:33.355202Z",
          "iopub.status.busy": "2022-02-27T12:30:33.354230Z",
          "iopub.status.idle": "2022-02-27T12:31:03.275478Z",
          "shell.execute_reply": "2022-02-27T12:31:03.275998Z",
          "shell.execute_reply.started": "2022-02-14T14:09:46.756755Z"
        },
        "papermill": {
          "duration": 29.987058,
          "end_time": "2022-02-27T12:31:03.276184",
          "exception": false,
          "start_time": "2022-02-27T12:30:33.289126",
          "status": "completed"
        },
        "tags": [],
        "id": "d56b876c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 754
        },
        "outputId": "4d8bd41f-fa3f-498b-c4e9-15f346672bab"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'articles_for_merge' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-39-c593d75533cc>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_style\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"darkgrid\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m25\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m18\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mboxplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0marticles_for_merge\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'price'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'product_group_name'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_xlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Price outliers'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfontsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m22\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_ylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Index names'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfontsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m22\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'articles_for_merge' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2500x1800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "sns.set_style(\"darkgrid\")\n",
        "f, ax = plt.subplots(figsize=(25,18))\n",
        "ax = sns.boxplot(data=articles_for_merge, x='price', y='product_group_name')\n",
        "ax.set_xlabel('Price outliers', fontsize=22)\n",
        "ax.set_ylabel('Index names', fontsize=22)\n",
        "ax.xaxis.set_tick_params(labelsize=22)\n",
        "ax.yaxis.set_tick_params(labelsize=22)\n",
        "\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "c8e64d9e",
      "metadata": {
        "papermill": {
          "duration": 0.065256,
          "end_time": "2022-02-27T12:31:03.407575",
          "exception": false,
          "start_time": "2022-02-27T12:31:03.342319",
          "status": "completed"
        },
        "tags": [],
        "id": "c8e64d9e"
      },
      "source": [
        "Теперь поизучаем стоимости в категории аксессуаров. И попытаемся найти причину такой разной цены\n",
        "\n",
        "Большие выбросы можно найти в сумках. Также в шарфах и других аксессуарах."
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "accessories = articles_for_merge[articles_for_merge['product_group_name'] == 'Accessories']\n",
        "accessories.head()"
      ],
      "metadata": {
        "id": "Q8FVKxQfoMFb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "45c8d879-11df-453c-adad-4578299df296"
      },
      "id": "Q8FVKxQfoMFb",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          customer_id  article_id  price  \\\n",
              "38  000aa7f0dc06cd7174389e76c9e132a67860c5f65f9706...   553139001 0.0339   \n",
              "39  000aa7f0dc06cd7174389e76c9e132a67860c5f65f9706...   553139001 0.0339   \n",
              "54  002b3c0a44a22c45a8d62ea9d2b88d1a89e335f8b84003...   673531001 0.0085   \n",
              "62  00401a367c5ac085cb9d4b77c56f3edcabf25153615db9...   633675001 0.0102   \n",
              "82  005c9fb2ba6c49b2098a662f64a9124ef95cbec5fcf4eb...   560783010 0.0051   \n",
              "\n",
              "         t_dat          prod_name  product_type_name product_group_name  \\\n",
              "38  2018-09-20  Jenner waist belt               Belt        Accessories   \n",
              "39  2018-09-20  Jenner waist belt               Belt        Accessories   \n",
              "54  2018-09-20      Keyring fluff  Other accessories        Accessories   \n",
              "62  2018-09-20  A-band unicorn PU    Hair/alice band        Accessories   \n",
              "82  2018-09-20  Polly pencil case                Bag        Accessories   \n",
              "\n",
              "                        index_name  \n",
              "38              Ladies Accessories  \n",
              "39              Ladies Accessories  \n",
              "54  Children Accessories, Swimwear  \n",
              "62  Children Accessories, Swimwear  \n",
              "82                         Divided  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c8b9fd5b-b7cf-4328-aa2f-c64764a22c95\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>article_id</th>\n",
              "      <th>price</th>\n",
              "      <th>t_dat</th>\n",
              "      <th>prod_name</th>\n",
              "      <th>product_type_name</th>\n",
              "      <th>product_group_name</th>\n",
              "      <th>index_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>000aa7f0dc06cd7174389e76c9e132a67860c5f65f9706...</td>\n",
              "      <td>553139001</td>\n",
              "      <td>0.0339</td>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>Jenner waist belt</td>\n",
              "      <td>Belt</td>\n",
              "      <td>Accessories</td>\n",
              "      <td>Ladies Accessories</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>000aa7f0dc06cd7174389e76c9e132a67860c5f65f9706...</td>\n",
              "      <td>553139001</td>\n",
              "      <td>0.0339</td>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>Jenner waist belt</td>\n",
              "      <td>Belt</td>\n",
              "      <td>Accessories</td>\n",
              "      <td>Ladies Accessories</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>002b3c0a44a22c45a8d62ea9d2b88d1a89e335f8b84003...</td>\n",
              "      <td>673531001</td>\n",
              "      <td>0.0085</td>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>Keyring fluff</td>\n",
              "      <td>Other accessories</td>\n",
              "      <td>Accessories</td>\n",
              "      <td>Children Accessories, Swimwear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>00401a367c5ac085cb9d4b77c56f3edcabf25153615db9...</td>\n",
              "      <td>633675001</td>\n",
              "      <td>0.0102</td>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>A-band unicorn PU</td>\n",
              "      <td>Hair/alice band</td>\n",
              "      <td>Accessories</td>\n",
              "      <td>Children Accessories, Swimwear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>005c9fb2ba6c49b2098a662f64a9124ef95cbec5fcf4eb...</td>\n",
              "      <td>560783010</td>\n",
              "      <td>0.0051</td>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>Polly pencil case</td>\n",
              "      <td>Bag</td>\n",
              "      <td>Accessories</td>\n",
              "      <td>Divided</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8b9fd5b-b7cf-4328-aa2f-c64764a22c95')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c8b9fd5b-b7cf-4328-aa2f-c64764a22c95 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c8b9fd5b-b7cf-4328-aa2f-c64764a22c95');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "59c8429f",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:31:03.554651Z",
          "iopub.status.busy": "2022-02-27T12:31:03.544894Z",
          "iopub.status.idle": "2022-02-27T12:31:17.357473Z",
          "shell.execute_reply": "2022-02-27T12:31:17.358018Z",
          "shell.execute_reply.started": "2022-02-14T14:17:48.123108Z"
        },
        "papermill": {
          "duration": 13.885575,
          "end_time": "2022-02-27T12:31:17.358221",
          "exception": false,
          "start_time": "2022-02-27T12:31:03.472646",
          "status": "completed"
        },
        "tags": [],
        "id": "59c8429f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "6a343987-4d00-4b2f-8013-d9129ddb981e"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1440x1296 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "sns.set_style(\"darkgrid\")\n",
        "f, ax = plt.subplots(figsize=(20, 18))\n",
        "ax = sns.boxplot(data=accessories, x='price', y='product_type_name')\n",
        "ax.set_xlabel('Price outliers', fontsize=22)\n",
        "ax.set_ylabel('Index names', fontsize=22)\n",
        "ax.xaxis.set_tick_params(labelsize=22)\n",
        "ax.yaxis.set_tick_params(labelsize=22)\n",
        "\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "35e33a8d",
      "metadata": {
        "papermill": {
          "duration": 0.073608,
          "end_time": "2022-02-27T12:31:17.506287",
          "exception": false,
          "start_time": "2022-02-27T12:31:17.432679",
          "status": "completed"
        },
        "tags": [],
        "id": "35e33a8d"
      },
      "source": [
        "Товар с самой высокой стоимостью находится в женском разделе, а вот с самой низкой стоимостью в детском"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "articles_index = articles_for_merge[['index_name', 'price']].groupby('index_name').mean()\n",
        "articles_index = articles_index.sort_values('price')\n",
        "articles_index"
      ],
      "metadata": {
        "id": "Q6oUA9LTocGn",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 394
        },
        "outputId": "0a432c14-5a60-4665-c510-83d0f2daceb0"
      },
      "id": "Q6oUA9LTocGn",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                price\n",
              "index_name                           \n",
              "Baby Sizes 50-98               0.0175\n",
              "Children Sizes 92-140          0.0175\n",
              "Children Accessories, Swimwear 0.0176\n",
              "Lingeries/Tights               0.0208\n",
              "Children Sizes 134-170         0.0219\n",
              "Ladies Accessories             0.0240\n",
              "Divided                        0.0265\n",
              "Menswear                       0.0275\n",
              "Sport                          0.0288\n",
              "Ladieswear                     0.0328"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0bf6fd5f-da51-4131-b726-b49b4bd03ae4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>price</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>index_name</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Baby Sizes 50-98</th>\n",
              "      <td>0.0175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Children Sizes 92-140</th>\n",
              "      <td>0.0175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Children Accessories, Swimwear</th>\n",
              "      <td>0.0176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lingeries/Tights</th>\n",
              "      <td>0.0208</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Children Sizes 134-170</th>\n",
              "      <td>0.0219</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ladies Accessories</th>\n",
              "      <td>0.0240</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Divided</th>\n",
              "      <td>0.0265</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Menswear</th>\n",
              "      <td>0.0275</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sport</th>\n",
              "      <td>0.0288</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ladieswear</th>\n",
              "      <td>0.0328</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0bf6fd5f-da51-4131-b726-b49b4bd03ae4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0bf6fd5f-da51-4131-b726-b49b4bd03ae4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0bf6fd5f-da51-4131-b726-b49b4bd03ae4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "33fd9b9f",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:31:18.640728Z",
          "iopub.status.busy": "2022-02-27T12:31:17.829093Z",
          "iopub.status.idle": "2022-02-27T12:31:21.986747Z",
          "shell.execute_reply": "2022-02-27T12:31:21.987264Z",
          "shell.execute_reply.started": "2022-02-10T16:37:31.10698Z"
        },
        "papermill": {
          "duration": 4.406646,
          "end_time": "2022-02-27T12:31:21.987484",
          "exception": false,
          "start_time": "2022-02-27T12:31:17.580838",
          "status": "completed"
        },
        "tags": [],
        "id": "33fd9b9f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        },
        "outputId": "cc5e13e3-5b90-4d93-ce71-e02f92099288"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "sns.set_style(\"darkgrid\")\n",
        "f, ax = plt.subplots(figsize=(10,5))\n",
        "ax = sns.barplot(x=articles_index.price, y=articles_index.index, color='orange', alpha=0.8)\n",
        "ax.set_xlabel('Price by index')\n",
        "ax.set_ylabel('Index')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "80bf9c26",
      "metadata": {
        "papermill": {
          "duration": 0.073333,
          "end_time": "2022-02-27T12:31:22.136517",
          "exception": false,
          "start_time": "2022-02-27T12:31:22.063184",
          "status": "completed"
        },
        "tags": [],
        "id": "80bf9c26"
      },
      "source": [
        "Канцелярские товары имеют наименьшую стоимость, а самая высокая стоисоть у обуви"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "articles_index = articles_for_merge[['product_group_name', 'price']].groupby('product_group_name').mean()\n",
        "articles_index = articles_index.sort_values('price')\n",
        "articles_index"
      ],
      "metadata": {
        "id": "FLOl_1M1ov2W",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "outputId": "3244bd67-5635-440f-9df9-3c0adf436f0a"
      },
      "id": "FLOl_1M1ov2W",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       price\n",
              "product_group_name          \n",
              "Stationery            0.0032\n",
              "Cosmetic              0.0058\n",
              "Fun                   0.0089\n",
              "Furniture             0.0096\n",
              "Items                 0.0113\n",
              "Socks & Tights        0.0114\n",
              "Accessories           0.0156\n",
              "Interior textile      0.0164\n",
              "Garment and Shoe care 0.0175\n",
              "Underwear             0.0212\n",
              "Swimwear              0.0223\n",
              "Nightwear             0.0254\n",
              "Unknown               0.0268\n",
              "Garment Upper body    0.0270\n",
              "Underwear/nightwear   0.0279\n",
              "Garment Lower body    0.0329\n",
              "Bags                  0.0333\n",
              "Garment Full body     0.0362\n",
              "Shoes                 0.0387"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fd1741ef-31cf-4805-bb9a-bf2c8f702a18\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>price</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_group_name</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Stationery</th>\n",
              "      <td>0.0032</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cosmetic</th>\n",
              "      <td>0.0058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fun</th>\n",
              "      <td>0.0089</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Furniture</th>\n",
              "      <td>0.0096</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Items</th>\n",
              "      <td>0.0113</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Socks &amp; Tights</th>\n",
              "      <td>0.0114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Accessories</th>\n",
              "      <td>0.0156</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Interior textile</th>\n",
              "      <td>0.0164</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Garment and Shoe care</th>\n",
              "      <td>0.0175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Underwear</th>\n",
              "      <td>0.0212</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Swimwear</th>\n",
              "      <td>0.0223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nightwear</th>\n",
              "      <td>0.0254</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Unknown</th>\n",
              "      <td>0.0268</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Garment Upper body</th>\n",
              "      <td>0.0270</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Underwear/nightwear</th>\n",
              "      <td>0.0279</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Garment Lower body</th>\n",
              "      <td>0.0329</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bags</th>\n",
              "      <td>0.0333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Garment Full body</th>\n",
              "      <td>0.0362</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Shoes</th>\n",
              "      <td>0.0387</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd1741ef-31cf-4805-bb9a-bf2c8f702a18')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fd1741ef-31cf-4805-bb9a-bf2c8f702a18 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fd1741ef-31cf-4805-bb9a-bf2c8f702a18');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "11746afc",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:31:22.290657Z",
          "iopub.status.busy": "2022-02-27T12:31:22.289936Z",
          "iopub.status.idle": "2022-02-27T12:31:26.834573Z",
          "shell.execute_reply": "2022-02-27T12:31:26.835116Z",
          "shell.execute_reply.started": "2022-02-10T16:42:47.950657Z"
        },
        "papermill": {
          "duration": 4.623348,
          "end_time": "2022-02-27T12:31:26.835328",
          "exception": false,
          "start_time": "2022-02-27T12:31:22.211980",
          "status": "completed"
        },
        "tags": [],
        "id": "11746afc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        },
        "outputId": "f97e9ad8-748f-401e-efb9-6d0d618e08b8"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "sns.set_style(\"darkgrid\")\n",
        "f, ax = plt.subplots(figsize=(10,5))\n",
        "ax = sns.barplot(x=articles_index.price, y=articles_index.index, color='orange', alpha=0.8)\n",
        "ax.set_xlabel('Price by product group')\n",
        "ax.set_ylabel('Product group')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f0b892d5",
      "metadata": {
        "papermill": {
          "duration": 0.076763,
          "end_time": "2022-02-27T12:31:26.989574",
          "exception": false,
          "start_time": "2022-02-27T12:31:26.912811",
          "status": "completed"
        },
        "tags": [],
        "id": "f0b892d5"
      },
      "source": [
        "**Анализ стоимости от времени**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5a396ede",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2022-02-27T12:31:27.148919Z",
          "iopub.status.busy": "2022-02-27T12:31:27.148207Z",
          "iopub.status.idle": "2022-02-27T12:31:35.616375Z",
          "shell.execute_reply": "2022-02-27T12:31:35.615721Z",
          "shell.execute_reply.started": "2022-02-10T17:00:32.686955Z"
        },
        "papermill": {
          "duration": 8.547917,
          "end_time": "2022-02-27T12:31:35.616563",
          "exception": false,
          "start_time": "2022-02-27T12:31:27.068646",
          "status": "completed"
        },
        "tags": [],
        "id": "5a396ede"
      },
      "outputs": [],
      "source": [
        "articles_for_merge['t_dat'] = pd.to_datetime(articles_for_merge['t_dat'])"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "articles_for_merge_product = articles_for_merge[articles_for_merge.product_group_name == 'Shoes']\n",
        "series_mean = articles_for_merge_product[['t_dat', 'price']].groupby(pd.Grouper(key=\"t_dat\", freq='M')).mean()\n",
        "series_mean"
      ],
      "metadata": {
        "id": "3H_kuPo96VAs",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 865
        },
        "outputId": "882f2273-8eea-485c-e361-981f5eca7539"
      },
      "id": "3H_kuPo96VAs",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            price\n",
              "t_dat            \n",
              "2018-09-30 0.0434\n",
              "2018-10-31 0.0417\n",
              "2018-11-30 0.0455\n",
              "2018-12-31 0.0442\n",
              "2019-01-31 0.0438\n",
              "2019-02-28 0.0405\n",
              "2019-03-31 0.0402\n",
              "2019-04-30 0.0375\n",
              "2019-05-31 0.0366\n",
              "2019-06-30 0.0304\n",
              "2019-07-31 0.0295\n",
              "2019-08-31 0.0365\n",
              "2019-09-30 0.0545\n",
              "2019-10-31 0.0507\n",
              "2019-11-30 0.0501\n",
              "2019-12-31 0.0427\n",
              "2020-01-31 0.0397\n",
              "2020-02-29 0.0440\n",
              "2020-03-31 0.0426\n",
              "2020-04-30 0.0365\n",
              "2020-05-31 0.0365\n",
              "2020-06-30 0.0293\n",
              "2020-07-31 0.0276\n",
              "2020-08-31 0.0353\n",
              "2020-09-30 0.0532"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-33c48660-3db9-46aa-8a0a-4d60e398a8f8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>price</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>t_dat</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2018-09-30</th>\n",
              "      <td>0.0434</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-10-31</th>\n",
              "      <td>0.0417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-11-30</th>\n",
              "      <td>0.0455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-12-31</th>\n",
              "      <td>0.0442</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-31</th>\n",
              "      <td>0.0438</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-02-28</th>\n",
              "      <td>0.0405</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-03-31</th>\n",
              "      <td>0.0402</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-04-30</th>\n",
              "      <td>0.0375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-05-31</th>\n",
              "      <td>0.0366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-06-30</th>\n",
              "      <td>0.0304</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-07-31</th>\n",
              "      <td>0.0295</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-08-31</th>\n",
              "      <td>0.0365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-09-30</th>\n",
              "      <td>0.0545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-10-31</th>\n",
              "      <td>0.0507</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-11-30</th>\n",
              "      <td>0.0501</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-12-31</th>\n",
              "      <td>0.0427</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-01-31</th>\n",
              "      <td>0.0397</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-02-29</th>\n",
              "      <td>0.0440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-03-31</th>\n",
              "      <td>0.0426</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-04-30</th>\n",
              "      <td>0.0365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-05-31</th>\n",
              "      <td>0.0365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-30</th>\n",
              "      <td>0.0293</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31</th>\n",
              "      <td>0.0276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-08-31</th>\n",
              "      <td>0.0353</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-09-30</th>\n",
              "      <td>0.0532</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-33c48660-3db9-46aa-8a0a-4d60e398a8f8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-33c48660-3db9-46aa-8a0a-4d60e398a8f8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-33c48660-3db9-46aa-8a0a-4d60e398a8f8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "series_std = articles_for_merge_product[['t_dat', 'price']].groupby(pd.Grouper(key=\"t_dat\", freq='M')).std().fillna(0)\n",
        "series_std"
      ],
      "metadata": {
        "id": "bOerrEHa67UG",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 865
        },
        "outputId": "8d4679b9-eb0c-4e0c-f6d6-f8aad4932092"
      },
      "id": "bOerrEHa67UG",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            price\n",
              "t_dat            \n",
              "2018-09-30 0.0277\n",
              "2018-10-31 0.0268\n",
              "2018-11-30 0.0265\n",
              "2018-12-31 0.0277\n",
              "2019-01-31 0.0271\n",
              "2019-02-28 0.0232\n",
              "2019-03-31 0.0201\n",
              "2019-04-30 0.0199\n",
              "2019-05-31 0.0202\n",
              "2019-06-30 0.0186\n",
              "2019-07-31 0.0178\n",
              "2019-08-31 0.0272\n",
              "2019-09-30 0.0356\n",
              "2019-10-31 0.0354\n",
              "2019-11-30 0.0332\n",
              "2019-12-31 0.0281\n",
              "2020-01-31 0.0251\n",
              "2020-02-29 0.0256\n",
              "2020-03-31 0.0220\n",
              "2020-04-30 0.0185\n",
              "2020-05-31 0.0188\n",
              "2020-06-30 0.0167\n",
              "2020-07-31 0.0166\n",
              "2020-08-31 0.0244\n",
              "2020-09-30 0.0289"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7305eefd-fe22-45a3-930e-840bfaa631a2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>price</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>t_dat</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2018-09-30</th>\n",
              "      <td>0.0277</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-10-31</th>\n",
              "      <td>0.0268</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-11-30</th>\n",
              "      <td>0.0265</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-12-31</th>\n",
              "      <td>0.0277</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-31</th>\n",
              "      <td>0.0271</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-02-28</th>\n",
              "      <td>0.0232</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-03-31</th>\n",
              "      <td>0.0201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-04-30</th>\n",
              "      <td>0.0199</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-05-31</th>\n",
              "      <td>0.0202</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-06-30</th>\n",
              "      <td>0.0186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-07-31</th>\n",
              "      <td>0.0178</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-08-31</th>\n",
              "      <td>0.0272</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-09-30</th>\n",
              "      <td>0.0356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-10-31</th>\n",
              "      <td>0.0354</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-11-30</th>\n",
              "      <td>0.0332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-12-31</th>\n",
              "      <td>0.0281</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-01-31</th>\n",
              "      <td>0.0251</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-02-29</th>\n",
              "      <td>0.0256</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-03-31</th>\n",
              "      <td>0.0220</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-04-30</th>\n",
              "      <td>0.0185</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-05-31</th>\n",
              "      <td>0.0188</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-30</th>\n",
              "      <td>0.0167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-31</th>\n",
              "      <td>0.0166</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-08-31</th>\n",
              "      <td>0.0244</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-09-30</th>\n",
              "      <td>0.0289</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7305eefd-fe22-45a3-930e-840bfaa631a2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7305eefd-fe22-45a3-930e-840bfaa631a2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7305eefd-fe22-45a3-930e-840bfaa631a2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "f, ax = plt.subplots(1,1, figsize=(12, 8))\n",
        "\n",
        "ax.plot(series_mean, linewidth=4, color='cadetblue')\n",
        "ax.fill_between(series_mean.index,\n",
        "               (series_mean.values - 2*series_std.values).ravel(),\n",
        "               (series_mean.values + 2*series_std.values).ravel(),\n",
        "               color='cadetblue', alpha=.1)\n",
        "\n",
        "ax.set_title(f'Mean Shoes price in time')\n",
        "ax.set_xlabel('month')\n",
        "ax.set_xlabel(f'Shoes');"
      ],
      "metadata": {
        "id": "3KJqtpdQ6wU6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "outputId": "2bed4de6-c173-4a33-8bfb-ded4dccad851"
      },
      "id": "3KJqtpdQ6wU6",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "articles_for_merge_product = articles_for_merge[articles_for_merge.product_group_name == 'Bags']\n",
        "series_mean = articles_for_merge_product[['t_dat', 'price']].groupby(pd.Grouper(key=\"t_dat\", freq='M')).mean()\n",
        "series_std = articles_for_merge_product[['t_dat', 'price']].groupby(pd.Grouper(key=\"t_dat\", freq='M')).std().fillna(0)\n",
        "\n",
        "f, ax = plt.subplots(1,1, figsize=(12, 8))\n",
        "\n",
        "ax.plot(series_mean, linewidth=4, color='lightseagreen')\n",
        "ax.fill_between(series_mean.index,\n",
        "               (series_mean.values-2*series_std.values).ravel(),\n",
        "               (series_mean.values+2*series_std.values).ravel(),\n",
        "               color='lightseagreen', alpha=.1)\n",
        "\n",
        "ax.set_title(f'Mean Bags price in time')\n",
        "ax.set_xlabel('month')\n",
        "ax.set_xlabel(f'Bags');"
      ],
      "metadata": {
        "id": "gZJ-dShL7iTo",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "outputId": "62f79c27-76da-4642-ed9c-276ea79aca4f"
      },
      "id": "gZJ-dShL7iTo",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x576 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAskAAAHwCAYAAABUqPIVAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdeZRkZX0//vfz3FtLr9M9zEz3OJsIwwyECQ5CwITFNBknMLI6RJOQMDFEfi4/RY8ox5wviUSjJpMoEc0RQcyivxwhBzA0BoHhJ/7MyGJQFIZlYAZm6x5meq3t3vssvz+quuiqXqqru5Zb1e/XORymblXXvf3U7bqfeurzfD7CWmtBRERERER5st4HQEREREQUNgySiYiIiIiKMEgmIiIiIirCIJmIiIiIqAiDZCIiIiKiIgySiYiIiIiKMEgmIlpkNm/ejAMHDlT0Obdt24YnnniiIs/19NNPY+vWrRV5LiKi+RKsk0xEjaCvrw9Hjx7F448/jqVLl+a3X3HFFdizZw8effRRrF69umbH88QTT+Daa69FS0sLAKC9vR1XX301Pvaxj9XsGJrFhg0b8KMf/Qjr1q2r96EQEeVxJpmIGsaqVavQ39+fv/3iiy8inU7X7XhWrFiBZ555Bs888wy+973v4Z577sEjjzxSt+MpRSlV70MgImoYDJKJqGFcfvnluO+++/K377vvPlxxxRUFj/F9H1/+8pfxrne9C7/927+Nm2++GZlMBgAwOjqK66+/Hueeey7OPvtsXH/99RgYGMj/7J/8yZ/gq1/9Kt7//vdj8+bN+MAHPoChoaE5HduaNWuwefNm7N27N7/t85//PC688EKceeaZuOqqq/D000/n78tkMvjMZz6Ds88+GxdffDG+9a1v4YILLsjff/vtt+P888/H5s2bsXXrVuzevXva/d500024+eab8Wd/9mfYvHkzrrnmGhw6dCh//4YNG/Dd734X7373u/Hud787v+21117LH8eXvvQl/O7v/i7e8Y534A//8A/z4/WLX/wC73//+3HWWWfhsssumzWdoq+vD//zP/8DAPja176Gj3/84/j0pz+NzZs3Y9u2bfjVr3417c/98R//MYDsa7t582Y8+OCDeOKJJwrGoq+vD3fccQcuvfRSvP3tb8dnP/tZHDt2DNdddx02b96MHTt2YHR0NP/4co6biGgmDJKJqGG8/e1vRyKRwCuvvAKtNfr7+3HZZZcVPGbnzp3Yt28f7rvvPvzoRz/C0aNH8fWvfx0AYIzBVVddhcceewyPPfYYYrEYbrnlloKff+CBB/DFL34Ru3fvRhAE+Pa3vz2nY9u/fz/+93//F2eccUZ+26ZNm3DffffhySefxHve8x58/OMfh+d5AIDbbrsNhw4dwiOPPIK77roLP/jBD/I/9+qrr+K73/0u7rnnHjzzzDO48847sWrVqhn3/V//9V/48Ic/jCeeeAIbN27Epz71qYL7H3nkEXz/+9/Hgw8+OOVnv/zlL+O5557Df/zHf+DJJ5/EjTfeCCklBgcHcf311+NDH/oQnnzySXzmM5/Bxz72sTl/aNi1axe2bduGp59+Gn19ffibv/mbaR/33e9+FwBw//3345lnnsEll1wy7eN+9KMf4a677sJDDz2Exx57DH/xF3+BT37yk/jZz34GYwz+7d/+DQAWfNxERBMYJBNRQ5mYTf7pT3+Kk046CT09Pfn7rLX4/ve/j89+9rPo6upCe3s7rr/++nyKRnd3N7Zu3YqWlha0t7fjQx/6EJ566qmC57/qqqtw4oknIh6P4/d///exZ8+eGY/l6NGjOOuss3DmmWdi69atOOOMM/COd7yj4Fi7u7vhui4+8IEPwPd97Nu3DwDwwx/+ENdffz2WLFmC3t5e/Omf/mn+5xzHge/7eOWVVxAEAVavXo21a9fOeBzvete7cPbZZyMajeITn/gEfvGLX+DIkSP5+z/4wQ+iq6sL8Xi84OeMMfjP//xP/OVf/iV6enrgOA7OPPNMRKNR3H///bjgggtw4YUXQkqJ3/md38Hpp5+OH//4x7O9PHnveMc7cOGFF8JxHFx++eV44YUX5vRzM7nmmmuwbNky9PT04KyzzsJv/uZv4rTTTkMsFsOWLVvw/PPPA8CCj5uIaIJb7wMgIirH5ZdfjmuuuQYHDx7E5ZdfXnDf0NAQ0uk0rrrqqvw2ay2MMQCAdDqNL37xi/jJT36S/3o+mUxCaw3HcQAAy5cvz/9sS0sLUqnUjMeyYsUKPP744wCA8fFx/PVf/zVuuukm/OM//iMA4M4778Q999yDo0ePQgiBRCKB4eFhANkAe+XKlfnn6u3tzf973bp1+OxnP4uvfe1r2Lt3L8477zzcdNNNBR8IJpv8s21tbViyZEnB80/ez2TDw8PwPA9r1qyZct/hw4fx3//933jsscfy25RSOOecc2Ycj8mWLVuW/3c8HofneVBKwXXnd9mZ/HyxWGzK80+8Tgs9biKiCQySiaihrFq1CqtXr8aPf/xjfOELXyi4r7u7G/F4HP39/dMGlN/+9rexb98+fP/738fy5cuxZ88eXHHFFahEkZ+Ojg5ceuml+MQnPgEgW8bsjjvuwHe+8x2sX78eUkqcffbZ+X0tX74cAwMDOPnkkwGgIDcaAC699FJceumlSCQSuPnmm7Fz5078/d///bT7nvyzyWQSo6OjWLFiRX6bEGLan+vu7kYsFsOBAwewcePGgvtWrlyJyy+/HJ///OfLHIn6atTjJqLwYboFETWcL3zhC/iXf/kXtLa2FmyXUuLqq6/G3/7t3+L48eMAsjmqP/nJTwBkA8hYLIbOzk6MjIzgtttuq9gxJZNJ9Pf354PeZDIJx3GwdOlSKKVw2223IZFI5B9/8cUX45vf/CZGR0cxODiIf//3f8/f9+qrr2L37t3wfR/RaBSxWAxSzvx2/eMf/xhPP/00fN/HrbfeijPOOGPG2ePJpJR473vfiy9+8YsYHByE1hrPPPMMfN/HZZddhsceeww/+clPoLWG53l44oknpgTzlbBs2bKK1W2u5XETUXNjkExEDWft2rXYtGnTtPfdeOONWLduHf7gD/4AZ555Jnbs2JHPA7722mvheR7OPfdcvO9978P555+/oOM4evQoNm/ejM2bN6Ovrw+jo6PYuXMnAOC8887D+eefj61bt6Kvrw+xWKwgcP3IRz6C3t5eXHTRRdixYwe2bt2KaDQKIFuh4x/+4R9wzjnn4LzzzsPQ0BA++clPzngc73nPe/D1r38d55xzDp577rkZZ5yn85nPfAannHIKtm/fjt/6rd/Czp07YYzBypUr8Y1vfAPf/OY38c53vhMXXngh7rzzznzqSiV99KMfxU033YSzzjpr2sWF5ajlcRNRc2MzESKiEPje976HBx98sGBGeS4mcpUn0jyIiKgyOJNMRFQHR48exc9//nMYY/Dqq6/irrvuwu/93u/V+7CIiCiHC/eIiOogCAL81V/9FQ4ePIiOjg5s27YNf/RHf1TvwyIiohymWxARERERFWG6BRERERFREQbJRERERERFQpeTbIyB1vXLAHEcUdf9NxqO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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "papermill": {
          "duration": 0.1012,
          "end_time": "2021-02-25T06:30:30.036397",
          "exception": false,
          "start_time": "2021-02-25T06:30:29.935197",
          "status": "completed"
        },
        "tags": [],
        "id": "fQxwY61Sihze"
      },
      "source": [
        "[link text](https://)## Система рекомендаций (Collaborative Filtering)\n",
        "\n",
        "<img src='https://www.researchgate.net/profile/Lionel-Ngoupeyou-Tondji/publication/323726564/figure/fig5/AS:631605009846299@1527597777415/Content-based-filtering-vs-Collaborative-filtering-Source.png' width=700>"
      ],
      "id": "fQxwY61Sihze"
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "transactions.customer_id.unique()"
      ],
      "metadata": {
        "id": "RL7VYdPxWoLU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cb9a33de-0f4b-4ac8-d449-d455edabdaa7"
      },
      "id": "RL7VYdPxWoLU",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "CPU times: user 8.41 s, sys: 154 ms, total: 8.56 s\n",
            "Wall time: 8.51 s\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['000058a12d5b43e67d225668fa1f8d618c13dc232df0cad8ffe7ad4a1091e318',\n",
              "       '00007d2de826758b65a93dd24ce629ed66842531df6699338c5570910a014cc2',\n",
              "       '00083cda041544b2fbb0e0d2905ad17da7cf1007526fb4c73235dccbbc132280',\n",
              "       ...,\n",
              "       'fece2f68864c311a0b5208e2eb735b3dcde7e41461d327bdd033014a27168ce8',\n",
              "       'fee56cc5315dafb35a4490ccc6f711092cae913550c83251955178bdd1bc6be3',\n",
              "       'ff5b8a8b26bf93a66290e9bd1b73393ac6a58968a7851941508cce49f5dfa469'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "transactions['customer_id_cat'] = transactions.customer_id.astype('category')"
      ],
      "metadata": {
        "id": "ceNQpqgmWwWi"
      },
      "id": "ceNQpqgmWwWi",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "transactions.customer_id_cat.unique()"
      ],
      "metadata": {
        "id": "MxrLggOIW9mp",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6ec24994-07a0-4e6d-c013-cb9ce7a73f9f"
      },
      "id": "MxrLggOIW9mp",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "CPU times: user 247 ms, sys: 710 µs, total: 248 ms\n",
            "Wall time: 249 ms\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['000058a12d5b43e67d225668fa1f8d618c13dc232df0c..., '00007d2de826758b65a93dd24ce629ed66842531df669..., '00083cda041544b2fbb0e0d2905ad17da7cf1007526fb..., '0008968c0d451dbc5a9968da03196fe20051965edde74..., '000aa7f0dc06cd7174389e76c9e132a67860c5f65f970..., ..., 'fe99a0069d6b3c64c2707d0ce53b9311540917471d82d..., 'fecc5f77b5f7ee4570efde9ab05ec94d0de2bf80efb4f..., 'fece2f68864c311a0b5208e2eb735b3dcde7e41461d32..., 'fee56cc5315dafb35a4490ccc6f711092cae913550c83..., 'ff5b8a8b26bf93a66290e9bd1b73393ac6a58968a7851...]\n",
              "Length: 1362281\n",
              "Categories (1362281, object): [,\n",
              "                               '00000dbacae5abe5e23885899a1fa44253a17956c6d1c...,\n",
              "                               '0000423b00ade91418cceaf3b26c6af3dd342b51fd051...,\n",
              "                               '000058a12d5b43e67d225668fa1f8d618c13dc232df0c...,\n",
              "                               '00005ca1c9ed5f5146b52ac8639a40ca9d57aeff4d1bd..., ...,\n",
              "                               'ffffcd5046a6143d29a04fb8c424ce494a76e5cdf4fab...,\n",
              "                               'ffffcf35913a0bee60e8741cb2b4e78b8a98ee5ff2e6a...,\n",
              "                               'ffffd7744cebcf3aca44ae7049d2a94b87074c3d4ffe3...,\n",
              "                               'ffffd9ac14e89946416d80e791d064701994755c3ab68...]"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "customer_ids_1k = transactions['customer_id_cat'].unique()[:1000]\n",
        "customer_dict = {id: i for i, id in enumerate(customer_ids_1k)}\n",
        "len(customer_dict)"
      ],
      "metadata": {
        "id": "EIVrSxQQVlkI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "341e327f-ac59-4189-ccd8-44cb8b195ac8"
      },
      "id": "EIVrSxQQVlkI",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1000"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "transactions_small = transactions[transactions['customer_id_cat'].isin(customer_ids_1k)].copy()\n",
        "transactions_small.head()"
      ],
      "metadata": {
        "id": "cblRifXcdYzo",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "50b619e3-1f22-44a9-8b4c-02b23bdca57e"
      },
      "id": "cblRifXcdYzo",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        t_dat                                        customer_id  article_id  \\\n",
              "0  2018-09-20  000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...   663713001   \n",
              "1  2018-09-20  000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...   541518023   \n",
              "2  2018-09-20  00007d2de826758b65a93dd24ce629ed66842531df6699...   505221004   \n",
              "3  2018-09-20  00007d2de826758b65a93dd24ce629ed66842531df6699...   685687003   \n",
              "4  2018-09-20  00007d2de826758b65a93dd24ce629ed66842531df6699...   685687004   \n",
              "\n",
              "   price  sales_channel_id                                    customer_id_cat  \n",
              "0 0.0508                 2  000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...  \n",
              "1 0.0305                 2  000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...  \n",
              "2 0.0152                 2  00007d2de826758b65a93dd24ce629ed66842531df6699...  \n",
              "3 0.0169                 2  00007d2de826758b65a93dd24ce629ed66842531df6699...  \n",
              "4 0.0169                 2  00007d2de826758b65a93dd24ce629ed66842531df6699...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d31b8079-4b80-4c5d-bea9-37c0154a9336\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>t_dat</th>\n",
              "      <th>customer_id</th>\n",
              "      <th>article_id</th>\n",
              "      <th>price</th>\n",
              "      <th>sales_channel_id</th>\n",
              "      <th>customer_id_cat</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...</td>\n",
              "      <td>663713001</td>\n",
              "      <td>0.0508</td>\n",
              "      <td>2</td>\n",
              "      <td>000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...</td>\n",
              "      <td>541518023</td>\n",
              "      <td>0.0305</td>\n",
              "      <td>2</td>\n",
              "      <td>000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "      <td>505221004</td>\n",
              "      <td>0.0152</td>\n",
              "      <td>2</td>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "      <td>685687003</td>\n",
              "      <td>0.0169</td>\n",
              "      <td>2</td>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "      <td>685687004</td>\n",
              "      <td>0.0169</td>\n",
              "      <td>2</td>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d31b8079-4b80-4c5d-bea9-37c0154a9336')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d31b8079-4b80-4c5d-bea9-37c0154a9336 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d31b8079-4b80-4c5d-bea9-37c0154a9336');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tqdm.pandas()\n",
        "\n",
        "def replace(x):\n",
        "    try:\n",
        "        res = customer_dict[x.customer_id_cat]\n",
        "    except Exception as e:\n",
        "        print(e)\n",
        "        res = -1\n",
        "    return res\n",
        "\n",
        "\n",
        "transactions_small['customer_id'] = transactions_small.progress_apply(replace, axis=1)\n",
        "transactions_small.head()"
      ],
      "metadata": {
        "id": "eQdEdtyEV_II",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "outputId": "3124196a-9201-4d97-9b11-79d07c52118f"
      },
      "id": "eQdEdtyEV_II",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 72374/72374 [00:03<00:00, 22328.48it/s]\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        t_dat  customer_id  article_id  price  sales_channel_id  \\\n",
              "0  2018-09-20            0   663713001 0.0508                 2   \n",
              "1  2018-09-20            0   541518023 0.0305                 2   \n",
              "2  2018-09-20            1   505221004 0.0152                 2   \n",
              "3  2018-09-20            1   685687003 0.0169                 2   \n",
              "4  2018-09-20            1   685687004 0.0169                 2   \n",
              "\n",
              "                                     customer_id_cat  \n",
              "0  000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...  \n",
              "1  000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...  \n",
              "2  00007d2de826758b65a93dd24ce629ed66842531df6699...  \n",
              "3  00007d2de826758b65a93dd24ce629ed66842531df6699...  \n",
              "4  00007d2de826758b65a93dd24ce629ed66842531df6699...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-87b6987a-6c29-4fb6-9eff-7be1329a1655\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>t_dat</th>\n",
              "      <th>customer_id</th>\n",
              "      <th>article_id</th>\n",
              "      <th>price</th>\n",
              "      <th>sales_channel_id</th>\n",
              "      <th>customer_id_cat</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>0</td>\n",
              "      <td>663713001</td>\n",
              "      <td>0.0508</td>\n",
              "      <td>2</td>\n",
              "      <td>000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>0</td>\n",
              "      <td>541518023</td>\n",
              "      <td>0.0305</td>\n",
              "      <td>2</td>\n",
              "      <td>000058a12d5b43e67d225668fa1f8d618c13dc232df0ca...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>1</td>\n",
              "      <td>505221004</td>\n",
              "      <td>0.0152</td>\n",
              "      <td>2</td>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>1</td>\n",
              "      <td>685687003</td>\n",
              "      <td>0.0169</td>\n",
              "      <td>2</td>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2018-09-20</td>\n",
              "      <td>1</td>\n",
              "      <td>685687004</td>\n",
              "      <td>0.0169</td>\n",
              "      <td>2</td>\n",
              "      <td>00007d2de826758b65a93dd24ce629ed66842531df6699...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-87b6987a-6c29-4fb6-9eff-7be1329a1655')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-87b6987a-6c29-4fb6-9eff-7be1329a1655 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-87b6987a-6c29-4fb6-9eff-7be1329a1655');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "transactions_small['customer_id'].value_counts()"
      ],
      "metadata": {
        "id": "5e4bRpGqZuXV",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "179c43f9-ca31-4e9c-d6be-818a80536303"
      },
      "id": "5e4bRpGqZuXV",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "218    1157\n",
              "990    1059\n",
              "379     756\n",
              "566     652\n",
              "988     572\n",
              "       ... \n",
              "155       1\n",
              "382       1\n",
              "432       1\n",
              "22        1\n",
              "712       1\n",
              "Name: customer_id, Length: 1000, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "grouped = transactions_small.groupby(['customer_id', 'article_id']).count()['sales_channel_id']\n",
        "grouped"
      ],
      "metadata": {
        "id": "NWnQ5T9_ay5l",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "56144410-3910-4cd8-e6d3-b7a30fb4afd5"
      },
      "id": "NWnQ5T9_ay5l",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "customer_id  article_id\n",
              "0            351484002     2\n",
              "             541518023     1\n",
              "             578020002     1\n",
              "             663713001     2\n",
              "             723529001     1\n",
              "                          ..\n",
              "999          861121001     1\n",
              "             861847005     1\n",
              "             862167002     2\n",
              "             863000005     1\n",
              "             863001001     1\n",
              "Name: sales_channel_id, Length: 60252, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "customer_item_matrix = grouped.unstack('article_id')\n",
        "customer_item_matrix"
      ],
      "metadata": {
        "id": "EFBeMU1NbQIE",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "outputId": "dc149f48-a3bb-43ca-ef17-e2e0649d230c"
      },
      "id": "EFBeMU1NbQIE",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "article_id   108775015  108775044  108775051  110065001  110065011  111565001  \\\n",
              "customer_id                                                                     \n",
              "0                  NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "1                  NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "2                  NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "3                  NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "4                  NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "...                ...        ...        ...        ...        ...        ...   \n",
              "995                NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "996                NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "997                NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "998                NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "999                NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "\n",
              "article_id   111586001  111593001  111609001  116379047  ...  941005001  \\\n",
              "customer_id                                              ...              \n",
              "0                  NaN        NaN        NaN        NaN  ...        NaN   \n",
              "1                  NaN        NaN        NaN        NaN  ...        NaN   \n",
              "2                  NaN        NaN        NaN        NaN  ...        NaN   \n",
              "3                  NaN        NaN        NaN        NaN  ...        NaN   \n",
              "4                  NaN        NaN        NaN        NaN  ...        NaN   \n",
              "...                ...        ...        ...        ...  ...        ...   \n",
              "995                NaN        NaN        NaN        NaN  ...        NaN   \n",
              "996                NaN        NaN        NaN        NaN  ...        NaN   \n",
              "997                NaN        NaN        NaN        NaN  ...        NaN   \n",
              "998                NaN        NaN        NaN        NaN  ...        NaN   \n",
              "999                NaN        NaN        NaN        NaN  ...        NaN   \n",
              "\n",
              "article_id   942064001  942187001  944506001  946282001  946748003  946748004  \\\n",
              "customer_id                                                                     \n",
              "0                  NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "1                  NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "2                  NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "3                  NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "4                  NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "...                ...        ...        ...        ...        ...        ...   \n",
              "995                NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "996                NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "997                NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "998                NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "999                NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "\n",
              "article_id   947060001  947509001  949198001  \n",
              "customer_id                                   \n",
              "0                  NaN        NaN        NaN  \n",
              "1                  NaN        NaN        NaN  \n",
              "2                  NaN        NaN        NaN  \n",
              "3                  NaN        NaN        NaN  \n",
              "4                  NaN        NaN        NaN  \n",
              "...                ...        ...        ...  \n",
              "995                NaN        NaN        NaN  \n",
              "996                NaN        NaN        NaN  \n",
              "997                NaN        NaN        NaN  \n",
              "998                NaN        NaN        NaN  \n",
              "999                NaN        NaN        NaN  \n",
              "\n",
              "[1000 rows x 28632 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ceba8f14-83c1-429d-9269-347f9dd2d3e2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>article_id</th>\n",
              "      <th>108775015</th>\n",
              "      <th>108775044</th>\n",
              "      <th>108775051</th>\n",
              "      <th>110065001</th>\n",
              "      <th>110065011</th>\n",
              "      <th>111565001</th>\n",
              "      <th>111586001</th>\n",
              "      <th>111593001</th>\n",
              "      <th>111609001</th>\n",
              "      <th>116379047</th>\n",
              "      <th>...</th>\n",
              "      <th>941005001</th>\n",
              "      <th>942064001</th>\n",
              "      <th>942187001</th>\n",
              "      <th>944506001</th>\n",
              "      <th>946282001</th>\n",
              "      <th>946748003</th>\n",
              "      <th>946748004</th>\n",
              "      <th>947060001</th>\n",
              "      <th>947509001</th>\n",
              "      <th>949198001</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>customer_id</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>995</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>996</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>997</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>998</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>999</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1000 rows × 28632 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ceba8f14-83c1-429d-9269-347f9dd2d3e2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ceba8f14-83c1-429d-9269-347f9dd2d3e2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ceba8f14-83c1-429d-9269-347f9dd2d3e2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "customer_item_matrix.shape"
      ],
      "metadata": {
        "id": "B2fRAn8QUg2x",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "dba8a3ba-5bb7-475a-fa46-ae92fcb45071"
      },
      "id": "B2fRAn8QUg2x",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1000, 28632)"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "customer_item_matrix = customer_item_matrix.applymap(lambda x: 1 if x > 0 else 0)\n",
        "customer_item_matrix.head()"
      ],
      "metadata": {
        "id": "Htfiw2lkVUFT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "outputId": "c08dafcd-b54b-4168-8991-654d52f9886e"
      },
      "id": "Htfiw2lkVUFT",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "article_id   108775015  108775044  108775051  110065001  110065011  111565001  \\\n",
              "customer_id                                                                     \n",
              "0                    0          0          0          0          0          0   \n",
              "1                    0          0          0          0          0          0   \n",
              "2                    0          0          0          0          0          0   \n",
              "3                    0          0          0          0          0          0   \n",
              "4                    0          0          0          0          0          0   \n",
              "\n",
              "article_id   111586001  111593001  111609001  116379047  ...  941005001  \\\n",
              "customer_id                                              ...              \n",
              "0                    0          0          0          0  ...          0   \n",
              "1                    0          0          0          0  ...          0   \n",
              "2                    0          0          0          0  ...          0   \n",
              "3                    0          0          0          0  ...          0   \n",
              "4                    0          0          0          0  ...          0   \n",
              "\n",
              "article_id   942064001  942187001  944506001  946282001  946748003  946748004  \\\n",
              "customer_id                                                                     \n",
              "0                    0          0          0          0          0          0   \n",
              "1                    0          0          0          0          0          0   \n",
              "2                    0          0          0          0          0          0   \n",
              "3                    0          0          0          0          0          0   \n",
              "4                    0          0          0          0          0          0   \n",
              "\n",
              "article_id   947060001  947509001  949198001  \n",
              "customer_id                                   \n",
              "0                    0          0          0  \n",
              "1                    0          0          0  \n",
              "2                    0          0          0  \n",
              "3                    0          0          0  \n",
              "4                    0          0          0  \n",
              "\n",
              "[5 rows x 28632 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-76ec8418-5eac-4359-af47-54af7cda1239\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>article_id</th>\n",
              "      <th>108775015</th>\n",
              "      <th>108775044</th>\n",
              "      <th>108775051</th>\n",
              "      <th>110065001</th>\n",
              "      <th>110065011</th>\n",
              "      <th>111565001</th>\n",
              "      <th>111586001</th>\n",
              "      <th>111593001</th>\n",
              "      <th>111609001</th>\n",
              "      <th>116379047</th>\n",
              "      <th>...</th>\n",
              "      <th>941005001</th>\n",
              "      <th>942064001</th>\n",
              "      <th>942187001</th>\n",
              "      <th>944506001</th>\n",
              "      <th>946282001</th>\n",
              "      <th>946748003</th>\n",
              "      <th>946748004</th>\n",
              "      <th>947060001</th>\n",
              "      <th>947509001</th>\n",
              "      <th>949198001</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>customer_id</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 28632 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76ec8418-5eac-4359-af47-54af7cda1239')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-76ec8418-5eac-4359-af47-54af7cda1239 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-76ec8418-5eac-4359-af47-54af7cda1239');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "papermill": {
          "duration": 0.102594,
          "end_time": "2021-02-25T06:30:31.717186",
          "exception": false,
          "start_time": "2021-02-25T06:30:31.614592",
          "status": "completed"
        },
        "tags": [],
        "id": "GICl7OCRihzg"
      },
      "source": [
        "Косинусная похожесть\n",
        "\n",
        "<img src='https://drive.google.com/uc?id=1sp8Hfr1H8YKdo6KQHhvK42VPtzzJJczk'>\n",
        "\n",
        "<img src='https://i.stack.imgur.com/36r1U.png'>"
      ],
      "id": "GICl7OCRihzg"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "papermill": {
          "duration": 0.867555,
          "end_time": "2021-02-25T06:30:32.688388",
          "exception": false,
          "start_time": "2021-02-25T06:30:31.820833",
          "status": "completed"
        },
        "tags": [],
        "id": "KkU4WpKkihzh",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3297a988-6186-4fd7-b31a-fe8ea35ca096"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1.        , 0.        , 0.        , ..., 0.        , 0.        ,\n",
              "        0.        ],\n",
              "       [0.        , 1.        , 0.        , ..., 0.        , 0.        ,\n",
              "        0.01173631],\n",
              "       [0.        , 0.        , 1.        , ..., 0.        , 0.        ,\n",
              "        0.        ],\n",
              "       ...,\n",
              "       [0.        , 0.        , 0.        , ..., 1.        , 0.        ,\n",
              "        0.        ],\n",
              "       [0.        , 0.        , 0.        , ..., 0.        , 1.        ,\n",
              "        0.        ],\n",
              "       [0.        , 0.01173631, 0.        , ..., 0.        , 0.        ,\n",
              "        1.        ]])"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ],
      "source": [
        "from sklearn.metrics.pairwise import cosine_similarity\n",
        "\n",
        "cosine_sim = cosine_similarity(customer_item_matrix, customer_item_matrix)\n",
        "cosine_sim"
      ],
      "id": "KkU4WpKkihzh"
    },
    {
      "cell_type": "code",
      "source": [
        "cosine_sim.shape"
      ],
      "metadata": {
        "id": "wMcDzrF6dtA8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a5f62a3a-0c06-49c8-de9e-a86b26dd34da"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1000, 1000)"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ],
      "id": "wMcDzrF6dtA8"
    },
    {
      "cell_type": "code",
      "source": [
        "cosine_sim_df = pd.DataFrame(cosine_sim)\n",
        "\n",
        "cosine_sim_df.columns = customer_item_matrix.index\n",
        "\n",
        "cosine_sim_df['customer_id'] = customer_item_matrix.index\n",
        "cosine_sim_df = cosine_sim_df.set_index('customer_id')\n",
        "\n",
        "cosine_sim_df.head()"
      ],
      "metadata": {
        "id": "743uKHyBd7e_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 267
        },
        "outputId": "dd9aa955-13d1-4ce3-8651-e4483f85a599"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "customer_id    0      1      2      3      4      5      6      7      8    \\\n",
              "customer_id                                                                  \n",
              "0           1.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000   \n",
              "1           0.0000 1.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000   \n",
              "2           0.0000 0.0000 1.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000   \n",
              "3           0.0000 0.0000 0.0000 1.0000 0.0221 0.0000 0.0000 0.0215 0.0000   \n",
              "4           0.0000 0.0000 0.0000 0.0221 1.0000 0.0264 0.0000 0.0000 0.0000   \n",
              "\n",
              "customer_id    9    ...    990    991    992    993    994    995    996  \\\n",
              "customer_id         ...                                                    \n",
              "0           0.0000  ... 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.1226   \n",
              "1           0.0000  ... 0.0151 0.0000 0.0122 0.0000 0.0000 0.0000 0.0000   \n",
              "2           0.0000  ... 0.0082 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000   \n",
              "3           0.0000  ... 0.0105 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000   \n",
              "4           0.0438  ... 0.0066 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000   \n",
              "\n",
              "customer_id    997    998    999  \n",
              "customer_id                       \n",
              "0           0.0000 0.0000 0.0000  \n",
              "1           0.0000 0.0000 0.0117  \n",
              "2           0.0000 0.0000 0.0000  \n",
              "3           0.0000 0.0000 0.0000  \n",
              "4           0.0566 0.0000 0.0000  \n",
              "\n",
              "[5 rows x 1000 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a465526d-c60b-48ec-848d-539cf3312e17\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>customer_id</th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>990</th>\n",
              "      <th>991</th>\n",
              "      <th>992</th>\n",
              "      <th>993</th>\n",
              "      <th>994</th>\n",
              "      <th>995</th>\n",
              "      <th>996</th>\n",
              "      <th>997</th>\n",
              "      <th>998</th>\n",
              "      <th>999</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>customer_id</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.1226</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.0000</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0151</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0122</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0117</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0082</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>0.0221</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0215</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0105</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0221</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>0.0264</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0438</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0066</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0566</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 1000 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a465526d-c60b-48ec-848d-539cf3312e17')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a465526d-c60b-48ec-848d-539cf3312e17 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a465526d-c60b-48ec-848d-539cf3312e17');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ],
      "id": "743uKHyBd7e_"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "papermill": {
          "duration": 0.114792,
          "end_time": "2021-02-25T06:30:33.125146",
          "exception": false,
          "start_time": "2021-02-25T06:30:33.010354",
          "status": "completed"
        },
        "tags": [],
        "id": "kzcT-Aodihzh",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4b6238dc-2acd-41e8-f66b-6a4e89b2d0d4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "customer_id\n",
              "4     1.0000\n",
              "899   0.1443\n",
              "460   0.1179\n",
              "101   0.1000\n",
              "972   0.0925\n",
              "       ...  \n",
              "363   0.0000\n",
              "364   0.0000\n",
              "365   0.0000\n",
              "367   0.0000\n",
              "999   0.0000\n",
              "Name: 4, Length: 1000, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ],
      "source": [
        "# На примере эталонного покупателя находим тех покупателей, которые близки к нему по косинусной мере\n",
        "cosine_sim_df.loc[4].sort_values(ascending=False)"
      ],
      "id": "kzcT-Aodihzh"
    },
    {
      "cell_type": "code",
      "source": [
        "# Определяем перечень уникальных покупок нашего эталонного покупателя\n",
        "A = customer_item_matrix.loc[4]\n",
        "items_bought_by_A = A[A > 0].index.tolist()\n",
        "items_bought_by_A"
      ],
      "metadata": {
        "id": "-WwNfZlCgo6u",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2f6be4cd-123d-4379-b375-287fc46eda9b"
      },
      "id": "-WwNfZlCgo6u",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[377277001,\n",
              " 501820043,\n",
              " 553139001,\n",
              " 589017001,\n",
              " 607983004,\n",
              " 631848002,\n",
              " 640639001,\n",
              " 663498003,\n",
              " 664421002,\n",
              " 671505001,\n",
              " 674681001,\n",
              " 676827002,\n",
              " 680187001,\n",
              " 680912006,\n",
              " 680912009,\n",
              " 685687002,\n",
              " 692454002,\n",
              " 693497001,\n",
              " 700819006,\n",
              " 706016001,\n",
              " 706016002,\n",
              " 706016003,\n",
              " 713349001,\n",
              " 717490002,\n",
              " 728162001,\n",
              " 733044001,\n",
              " 743049002,\n",
              " 748355006,\n",
              " 758049001,\n",
              " 758050001,\n",
              " 758060001,\n",
              " 758064001,\n",
              " 796210001,\n",
              " 851996001,\n",
              " 868164002,\n",
              " 903309001]"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Определяем перечень уникальных покупок покупателя наиболее близкого к нашему\n",
        "B = customer_item_matrix.loc[899]\n",
        "items_bought_by_B = B[B > 0].index.tolist()\n",
        "items_bought_by_B"
      ],
      "metadata": {
        "id": "GVndWY42gsrH",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "49bf9b4e-5855-453c-d20a-bd6e73c78f7e"
      },
      "id": "GVndWY42gsrH",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[595779011,\n",
              " 705988005,\n",
              " 708379004,\n",
              " 713700001,\n",
              " 718623005,\n",
              " 746329003,\n",
              " 758040001,\n",
              " 758043001,\n",
              " 758049001,\n",
              " 758050001,\n",
              " 758064001,\n",
              " 758125001]"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Отбираем те покупки, которые есть у близкого к нашему покупателю, но нет у нашего покупателя\n",
        "items_to_recommend_to_A = set(items_bought_by_B) - set(items_bought_by_A)\n",
        "items_to_recommend_to_A"
      ],
      "metadata": {
        "id": "eE3xWekHgvWF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f6e964cd-43d7-4d12-efdb-a32d3a3e3e0b"
      },
      "id": "eE3xWekHgvWF",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{595779011,\n",
              " 705988005,\n",
              " 708379004,\n",
              " 713700001,\n",
              " 718623005,\n",
              " 746329003,\n",
              " 758040001,\n",
              " 758043001,\n",
              " 758125001}"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Выводим перечень товаров, рекомендованных для нашего эталонного покупателя\n",
        "articles[articles['article_id'].isin(items_to_recommend_to_A)][['article_id', 'prod_name', 'product_type_name']]"
      ],
      "metadata": {
        "id": "NY6lT8r0gvun",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "outputId": "778c37e1-ee7a-4bdb-a295-2e95205c10cc"
      },
      "id": "NY6lT8r0gvun",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       article_id                    prod_name product_type_name\n",
              "21890   595779011                 Offy sweater           Sweater\n",
              "53880   705988005           Molly HW Ankle TRS          Trousers\n",
              "54760   708379004                       Simone               Top\n",
              "56254   713700001                VERA LACE TOP            Blouse\n",
              "58066   718623005               PHILIPPA SHIRT             Shirt\n",
              "66030   746329003                   Andy skirt             Skirt\n",
              "69757   758040001  LS Emmy Padded Triangle Top        Bikini top\n",
              "69758   758043001                LS Emmy Tanga   Swimwear bottom\n",
              "69771   758125001                    LS Sarong            Sarong"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f1be0d22-3463-45ae-bd48-77872748f8c6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>article_id</th>\n",
              "      <th>prod_name</th>\n",
              "      <th>product_type_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>21890</th>\n",
              "      <td>595779011</td>\n",
              "      <td>Offy sweater</td>\n",
              "      <td>Sweater</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53880</th>\n",
              "      <td>705988005</td>\n",
              "      <td>Molly HW Ankle TRS</td>\n",
              "      <td>Trousers</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54760</th>\n",
              "      <td>708379004</td>\n",
              "      <td>Simone</td>\n",
              "      <td>Top</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56254</th>\n",
              "      <td>713700001</td>\n",
              "      <td>VERA LACE TOP</td>\n",
              "      <td>Blouse</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58066</th>\n",
              "      <td>718623005</td>\n",
              "      <td>PHILIPPA SHIRT</td>\n",
              "      <td>Shirt</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66030</th>\n",
              "      <td>746329003</td>\n",
              "      <td>Andy skirt</td>\n",
              "      <td>Skirt</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69757</th>\n",
              "      <td>758040001</td>\n",
              "      <td>LS Emmy Padded Triangle Top</td>\n",
              "      <td>Bikini top</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69758</th>\n",
              "      <td>758043001</td>\n",
              "      <td>LS Emmy Tanga</td>\n",
              "      <td>Swimwear bottom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69771</th>\n",
              "      <td>758125001</td>\n",
              "      <td>LS Sarong</td>\n",
              "      <td>Sarong</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1be0d22-3463-45ae-bd48-77872748f8c6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f1be0d22-3463-45ae-bd48-77872748f8c6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f1be0d22-3463-45ae-bd48-77872748f8c6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.12"
    },
    "papermill": {
      "default_parameters": {},
      "duration": 262.344258,
      "end_time": "2022-02-27T12:32:31.373049",
      "environment_variables": {},
      "exception": null,
      "input_path": "__notebook__.ipynb",
      "output_path": "__notebook__.ipynb",
      "parameters": {},
      "start_time": "2022-02-27T12:28:09.028791",
      "version": "2.3.3"
    },
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "include_colab_link": true
    },
    "vp": {
      "vp_note_display": false,
      "vp_note_width": 0
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}